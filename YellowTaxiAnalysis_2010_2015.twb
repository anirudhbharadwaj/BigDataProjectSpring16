<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='points_tableau' inline='true' name='textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx' version='9.3'>
      <connection class='textscan' directory='C:/Users/Vignesh/Downloads' filename='points_tableau.csv' password='' server=''>
        <relation name='points_tableau.csv' table='[points_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='shape' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='point' ordinal='2' />
            <column datatype='real' name='latitude' ordinal='3' />
            <column datatype='real' name='longitude' ordinal='4' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>shape</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shape]</local-name>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias>shape</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>point</remote-name>
            <remote-type>20</remote-type>
            <local-name>[point]</local-name>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias>point</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[points_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Point' datatype='integer' name='[point]' role='measure' type='quantitative' />
      <column caption='Shape' datatype='integer' name='[shape]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Vignesh\Google Drive\STUDY\SPRING 2016\BDA\Project\tableau\points_tableau.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 01:07:23 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='222' timestamp-start='2016-05-14 01:07:23.126' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>222.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>222.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>1</ordinal>
              <family>points_tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9038.4414860600009</statistic>
                <statistic aggregation='Avg' datatype='real'>40.71370038765766</statistic>
                <statistic aggregation='Min' datatype='real'>40.562134</statistic>
                <statistic aggregation='Max' datatype='real'>40.869099519999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.079665712374825851</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.079486082580584191</statistic>
                <statistic aggregation='Var' datatype='real'>0.0063466257281884798</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0063180373240074505</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>367989.80123910808</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>2</ordinal>
              <family>points_tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-16411.629909589999</statistic>
                <statistic aggregation='Avg' datatype='real'>-73.926260854009001</statistic>
                <statistic aggregation='Min' datatype='real'>-74.017767910000003</statistic>
                <statistic aggregation='Max' datatype='real'>-73.08384418</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.1547099169921079</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15436107795297799</statistic>
                <statistic aggregation='Var' datatype='real'>0.02393515841570492</statistic>
                <statistic aggregation='VarP' datatype='real'>0.023827342386805346</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1213255.7234058166</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>3</ordinal>
              <family>points_tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;107th Infantry Memorial&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Washington Square Arch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Metropolitan Museum of Art&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>point</remote-name>
              <remote-type>16</remote-type>
              <local-name>[point]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>point</remote-alias>
              <ordinal>4</ordinal>
              <family>points_tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>719.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.2387387387387387</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9336819810485606</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9293219259378969</statistic>
                <statistic aggregation='Var' datatype='real'>3.7391260038318861</statistic>
                <statistic aggregation='VarP' datatype='real'>3.7222830939047156</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3155.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>shape</remote-name>
              <remote-type>16</remote-type>
              <local-name>[shape]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>shape</remote-alias>
              <ordinal>5</ordinal>
              <family>points_tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4743.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21.364864864864863</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>45</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.645387059028616</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.614619518054043</statistic>
                <statistic aggregation='Var' datatype='real'>186.19658799070564</statistic>
                <statistic aggregation='VarP' datatype='real'>185.35786462137813</statistic>
                <statistic aggregation='Count' datatype='integer'>222</statistic>
                <statistic aggregation='Median' datatype='integer'>21</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>142483.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.441923' measure-ordering='alphabetic' measure-percentage='0.558077' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='YellowTaxiTrips_2010_2015' inline='true' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' version='9.3'>
      <connection class='textscan' directory='C:/Users/Vignesh/Desktop/BDAProjectViz' filename='YellowTaxiTrips_2010_2015.csv' password='' server=''>
        <relation name='YellowTaxiTrips_2010_2015.csv' table='[YellowTaxiTrips_2010_2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='real' name='Latitude' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='integer' name='TotalPassengerCount' ordinal='4' />
            <column datatype='integer' name='WeekdayPassengerCount' ordinal='5' />
            <column datatype='integer' name='WeekendPassengerCount' ordinal='6' />
            <column datatype='integer' name='MorningPassengerCount' ordinal='7' />
            <column datatype='integer' name='AfternoonPassengerCount' ordinal='8' />
            <column datatype='integer' name='EveningPassengerCount' ordinal='9' />
            <column datatype='integer' name='LateNightPassengerCount' ordinal='10' />
            <column datatype='integer' name='HolidayPassengerCount' ordinal='11' />
            <column datatype='integer' name='Trip&lt;=2Miles' ordinal='12' />
            <column datatype='integer' name='Trip&gt;=10Miles' ordinal='13' />
            <column datatype='integer' name='TipPerMile' ordinal='14' />
            <column datatype='integer' name='TaxiCount' ordinal='15' />
            <column datatype='integer' name='Year' ordinal='16' />
            <column datatype='integer' name='Month' ordinal='17' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>TotalPassengerCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeekdayPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeekdayPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>WeekdayPassengerCount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeekendPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeekendPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>WeekendPassengerCount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MorningPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MorningPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>MorningPassengerCount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AfternoonPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AfternoonPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>AfternoonPassengerCount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EveningPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EveningPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>EveningPassengerCount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateNightPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LateNightPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>LateNightPassengerCount</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HolidayPassengerCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HolidayPassengerCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>HolidayPassengerCount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip&lt;=2Miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trip&lt;=2Miles]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Trip&lt;=2Miles</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip&gt;=10Miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trip&gt;=10Miles]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Trip&gt;=10Miles</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TipPerMile</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TipPerMile]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>TipPerMile</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiCount]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>TaxiCount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[YellowTaxiTrips_2010_2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Afternoon Passenger Count' datatype='integer' name='[AfternoonPassengerCount]' role='measure' type='quantitative' />
      <column caption='AvgTipPerMile' datatype='real' name='[Calculation_455989476824608768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[TipPerMile]/[TaxiCount]' />
      </column>
      <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
      </column>
      <column caption='Season' datatype='string' name='[Calculation_455989476828123138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([Month] = 3 OR [Month] = 4 OR [Month] = 5) THEN &quot;Spring&quot;&#13;&#10;ELSEIF ([Month] = 6 OR [Month] = 7 OR [Month] = 8) THEN &quot;Summer&quot;&#13;&#10;ELSEIF ([Month] = 9 OR [Month] = 10 OR [Month] = 11) THEN &quot;Fall&quot;&#13;&#10;ELSEIF ([Month] = 12 OR [Month] = 01 OR [Month] = 02) THEN &quot;Winter&quot;&#13;&#10;END' />
      </column>
      <column caption='NotAFedHolidayPassCount' datatype='integer' name='[Calculation_564075867974922240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[WeekdayPassengerCount] + [WeekendPassengerCount]' />
      </column>
      <column caption='Evening Passenger Count' datatype='integer' name='[EveningPassengerCount]' role='measure' type='quantitative' />
      <column caption='Holiday Passenger Count' datatype='integer' name='[HolidayPassengerCount]' role='measure' type='quantitative' />
      <column caption='Late Night Passenger Count' datatype='integer' name='[LateNightPassengerCount]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
      <column caption='Morning Passenger Count' datatype='integer' name='[MorningPassengerCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
      <column caption='Tip Per Mile' datatype='integer' name='[TipPerMile]' role='measure' type='quantitative' />
      <column datatype='integer' name='[TotalPassengerCount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Trip&lt;=2Miles]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Trip&gt;=10Miles]' role='measure' type='quantitative' />
      <column caption='Weekday Passenger Count' datatype='integer' name='[WeekdayPassengerCount]' role='measure' type='quantitative' />
      <column caption='Weekend Passenger Count' datatype='integer' name='[WeekendPassengerCount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_455989476824608768]' derivation='Attribute' name='[attr:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AfternoonPassengerCount]' derivation='Avg' name='[avg:AfternoonPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_455989476824608768]' derivation='Avg' name='[avg:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EveningPassengerCount]' derivation='Avg' name='[avg:EveningPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateNightPassengerCount]' derivation='Avg' name='[avg:LateNightPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MorningPassengerCount]' derivation='Avg' name='[avg:MorningPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&lt;=2Miles]' derivation='Avg' name='[avg:Trip&lt;=2Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&gt;=10Miles]' derivation='Avg' name='[avg:Trip&gt;=10Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&lt;=2Miles]' derivation='Count' name='[cnt:Trip&lt;=2Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&gt;=10Miles]' derivation='Count' name='[cnt:Trip&gt;=10Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_455989476824608768]' derivation='None' name='[none:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
      <column-instance column='[HolidayPassengerCount]' derivation='None' name='[none:HolidayPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[AfternoonPassengerCount]' derivation='Sum' name='[sum:AfternoonPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_455989476824608768]' derivation='Sum' name='[sum:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EveningPassengerCount]' derivation='Sum' name='[sum:EveningPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HolidayPassengerCount]' derivation='Sum' name='[sum:HolidayPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LateNightPassengerCount]' derivation='Sum' name='[sum:LateNightPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MorningPassengerCount]' derivation='Sum' name='[sum:MorningPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TaxiCount]' derivation='Sum' name='[sum:TaxiCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TipPerMile]' derivation='Sum' name='[sum:TipPerMile:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalPassengerCount]' derivation='Sum' name='[sum:TotalPassengerCount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&lt;=2Miles]' derivation='Sum' name='[sum:Trip&lt;=2Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trip&gt;=10Miles]' derivation='Sum' name='[sum:Trip&gt;=10Miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WeekendPassengerCount]' derivation='Sum' name='[sum:WeekendPassengerCount:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Month,Name)' hidden='true' name='[Action (Month,Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Month:ok]' />
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Month,Name,Year)' hidden='true' name='[Action (Month,Name,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Month:ok]' />
          <groupfilter function='level-members' level='[Name]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Name,Year)' hidden='true' name='[Action (Name,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year) 1' hidden='true' name='[Action (Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Vignesh\Google Drive\STUDY\SPRING 2016\BDA\Project\tableau\YellowTaxiTrips_2010_2015.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 01:07:02 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_455989476824608768]' formula='[TipPerMile]/[TaxiCount]' />
            <calculation column='[Calculation_455989476825935873]' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            <calculation column='[Calculation_455989476828123138]' formula='IF([Month] = 3 OR [Month] = 4 OR [Month] = 5) THEN &quot;Spring&quot;&#13;&#10;ELSEIF ([Month] = 6 OR [Month] = 7 OR [Month] = 8) THEN &quot;Summer&quot;&#13;&#10;ELSEIF ([Month] = 9 OR [Month] = 10 OR [Month] = 11) THEN &quot;Fall&quot;&#13;&#10;ELSEIF ([Month] = 12 OR [Month] = 01 OR [Month] = 02) THEN &quot;Winter&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3028' timestamp-start='2016-05-14 01:07:02.295' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AfternoonPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[AfternoonPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AfternoonPassengerCount</remote-alias>
              <ordinal>0</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2228</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>39771351.0</statistic>
                <statistic aggregation='Avg' datatype='real'>13134.528071334214</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>354425</statistic>
                <statistic aggregation='Stdev' datatype='real'>45797.52178253833</statistic>
                <statistic aggregation='StdevP' datatype='real'>45789.95881959641</statistic>
                <statistic aggregation='Var' datatype='real'>2097413001.4220726</statistic>
                <statistic aggregation='VarP' datatype='real'>2096720328.700335</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6871247081449.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_455989476824608768</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_455989476824608768]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_455989476824608768</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2524</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1625.1410427266055</statistic>
                <statistic aggregation='Avg' datatype='real'>0.53812617308827992</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>50.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.95542442780362569</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.95526623185456494</statistic>
                <statistic aggregation='Var' datatype='real'>0.91283583724388562</statistic>
                <statistic aggregation='VarP' datatype='real'>0.91253357372161947</statistic>
                <statistic aggregation='Count' datatype='integer'>3020</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3630.382322690456</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>2</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;C&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EveningPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[EveningPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EveningPassengerCount</remote-alias>
              <ordinal>3</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2239</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>46401073.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15324.00033025099</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>384201</statistic>
                <statistic aggregation='Stdev' datatype='real'>52185.110532317878</statistic>
                <statistic aggregation='StdevP' datatype='real'>52176.49272852164</statistic>
                <statistic aggregation='Var' datatype='real'>2723285761.2702346</statistic>
                <statistic aggregation='VarP' datatype='real'>2722386393.4494715</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8954436057341.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HolidayPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[HolidayPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HolidayPassengerCount</remote-alias>
              <ordinal>4</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1019</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3061249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1010.9805151915456</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>98776</statistic>
                <statistic aggregation='Stdev' datatype='real'>4675.1803639747995</statistic>
                <statistic aggregation='StdevP' datatype='real'>4674.4083087529598</statistic>
                <statistic aggregation='Var' datatype='real'>21857311.43569554</statistic>
                <statistic aggregation='VarP' datatype='real'>21850093.036938705</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>69256944807.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LateNightPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[LateNightPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LateNightPassengerCount</remote-alias>
              <ordinal>5</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1926</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>16353602.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5400.7932628797889</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>146670</statistic>
                <statistic aggregation='Stdev' datatype='real'>16714.48747943608</statistic>
                <statistic aggregation='StdevP' datatype='real'>16711.727263501245</statistic>
                <statistic aggregation='Var' datatype='real'>279374091.70022547</statistic>
                <statistic aggregation='VarP' datatype='real'>279281828.12965077</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>933987799082.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>6</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>123322.12403732026</statistic>
                <statistic aggregation='Avg' datatype='real'>40.727253645085952</statistic>
                <statistic aggregation='Min' datatype='real'>40.564253999999998</statistic>
                <statistic aggregation='Max' datatype='real'>40.862961900000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.070177560445052883</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.070165971383716316</statistic>
                <statistic aggregation='Var' datatype='real'>0.0049248899900190511</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0049232635402204974</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5022586.3333606934</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>7</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-223947.89717914024</statistic>
                <statistic aggregation='Avg' datatype='real'>-73.959014920455829</statistic>
                <statistic aggregation='Min' datatype='real'>-74.044500400000004</statistic>
                <statistic aggregation='Max' datatype='real'>-73.089927299999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.083058796316894168</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.08304508005946154</statistic>
                <statistic aggregation='Var' datatype='real'>0.0068987636456113114</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0068964853220823772</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>16562986.751434296</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>8</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19663.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.4937252311756932</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.4478933485407066</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.4473239664298898</statistic>
                <statistic aggregation='Var' datatype='real'>11.887968542911246</statistic>
                <statistic aggregation='VarP' datatype='real'>11.884042529521908</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>163671.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MorningPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[MorningPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MorningPassengerCount</remote-alias>
              <ordinal>9</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2197</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33499918.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11063.381109643329</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>287315</statistic>
                <statistic aggregation='Stdev' datatype='real'>35738.034822450209</statistic>
                <statistic aggregation='StdevP' datatype='real'>35732.133074441605</statistic>
                <statistic aggregation='Var' datatype='real'>1277207132.9706638</statistic>
                <statistic aggregation='VarP' datatype='real'>1276785334.0496035</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4236728351478.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>10</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;107th Infantry Memorial&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Washington Square Arch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>11</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3028.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3028.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[TaxiCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiCount</remote-alias>
              <ordinal>12</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2326</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>79134090.0</statistic>
                <statistic aggregation='Avg' datatype='real'>26134.111624834874</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>669884</statistic>
                <statistic aggregation='Stdev' datatype='real'>87606.532309343311</statistic>
                <statistic aggregation='StdevP' datatype='real'>87592.065042741597</statistic>
                <statistic aggregation='Var' datatype='real'>7674904503.268013</statistic>
                <statistic aggregation='VarP' datatype='real'>7672369858.4518738</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>25300035072782.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TipPerMile</remote-name>
              <remote-type>3</remote-type>
              <local-name>[TipPerMile]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TipPerMile</remote-alias>
              <ordinal>13</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2200</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>44519641.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14702.655548216644</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>461254</statistic>
                <statistic aggregation='Stdev' datatype='real'>51220.826158765092</statistic>
                <statistic aggregation='StdevP' datatype='real'>51212.367596052187</statistic>
                <statistic aggregation='Var' datatype='real'>2623573032.3864346</statistic>
                <statistic aggregation='VarP' datatype='real'>2622706594.7931762</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8596112515787.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[TotalPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalPassengerCount</remote-alias>
              <ordinal>14</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2394</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>136755379.0</statistic>
                <statistic aggregation='Avg' datatype='real'>45163.599405548215</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1135358</statistic>
                <statistic aggregation='Stdev' datatype='real'>150232.97813099512</statistic>
                <statistic aggregation='StdevP' datatype='real'>150208.16878756264</statistic>
                <statistic aggregation='Var' datatype='real'>22569947718.108055</statistic>
                <statistic aggregation='VarP' datatype='real'>22562493970.512905</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>74495596896423.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trip&lt;=2Miles</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Trip&lt;=2Miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip&lt;=2Miles</remote-alias>
              <ordinal>15</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2244</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>79350217.0</statistic>
                <statistic aggregation='Avg' datatype='real'>26205.487780713342</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>714189</statistic>
                <statistic aggregation='Stdev' datatype='real'>93114.352489241763</statistic>
                <statistic aggregation='StdevP' datatype='real'>93098.97566600272</statistic>
                <statistic aggregation='Var' datatype='real'>8670282639.4907646</statistic>
                <statistic aggregation='VarP' datatype='real'>8667419270.0589657</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>28324356691729.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trip&gt;=10Miles</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Trip&gt;=10Miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip&gt;=10Miles</remote-alias>
              <ordinal>16</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1186</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3354801.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1107.9263540290622</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>31993</statistic>
                <statistic aggregation='Stdev' datatype='real'>2940.7689446222662</statistic>
                <statistic aggregation='StdevP' datatype='real'>2940.2833085947418</statistic>
                <statistic aggregation='Var' datatype='real'>8648121.9856547564</statistic>
                <statistic aggregation='VarP' datatype='real'>8645265.9348008409</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29894737691.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeekdayPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[WeekdayPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeekdayPassengerCount</remote-alias>
              <ordinal>17</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2363</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>98188920.0</statistic>
                <statistic aggregation='Avg' datatype='real'>32426.988110964332</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>855013</statistic>
                <statistic aggregation='Stdev' datatype='real'>108793.79920216481</statistic>
                <statistic aggregation='StdevP' datatype='real'>108775.83308872348</statistic>
                <statistic aggregation='Var' datatype='real'>11836090744.840956</statistic>
                <statistic aggregation='VarP' datatype='real'>11832181864.14583</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>39011817626102.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeekendPassengerCount</remote-name>
              <remote-type>3</remote-type>
              <local-name>[WeekendPassengerCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeekendPassengerCount</remote-alias>
              <ordinal>18</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2205</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38565884.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12736.4214002642</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>364560</statistic>
                <statistic aggregation='Stdev' datatype='real'>41731.77947310068</statistic>
                <statistic aggregation='StdevP' datatype='real'>41724.887923309972</statistic>
                <statistic aggregation='Var' datatype='real'>1741541417.9915075</statistic>
                <statistic aggregation='VarP' datatype='real'>1740966272.2127786</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5762837222558.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>19</ordinal>
              <family>YellowTaxiTrips_2010_2015.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6093792.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2012.4808454425363</statistic>
                <statistic aggregation='Min' datatype='integer'>2010</statistic>
                <statistic aggregation='Max' datatype='integer'>2015</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7090954565807681</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7088132180425408</statistic>
                <statistic aggregation='Var' datatype='real'>2.9210072797050239</statistic>
                <statistic aggregation='VarP' datatype='real'>2.9200426141569045</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
                <statistic aggregation='Median' datatype='integer'>2012</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>12263648518.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_455989476825935873</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_455989476825935873]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_455989476825935873</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Beaches&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Parks&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_455989476828123138</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_455989476828123138]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_455989476828123138</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fall&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Winter&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3028</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.337784' measure-ordering='alphabetic' measure-percentage='0.662216' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Four Seasons Hotel&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Battery Park&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Coney Island Beach&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Literary Walk&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;The Plaza&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Central Park&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Jacob Riis Park  Beach&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Museum of National History&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Washington Square Arch&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;State of liberty National Monument&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Statue of Liberty&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Orchard Beach&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Riverside Park&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;The Peninsula Hotel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Prospect Park&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ricahrd Morris Hunt Memorial&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;AMC Lowes Lincoln Square&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Gramercy Park Hotel&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;107th Infantry Memorial&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;The Surrey Hotel&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Empire State Building&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Grand Army Plaza&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cherry Grove Beach&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Broadway Theater&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;The Mark Hotel&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sunshine Cinema&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Jones Beach&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;The Greenwich Hotel&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Grants Tomb&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rockaway beach and Boardwalk&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rockaway Beach and Boardwalk&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rockefeller Center&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Columbus Circle Fountain&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;The Pierre Hotel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bryant Park&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fort Tilden Beach&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Mandarin Oriental&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Times Square&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Broadway and Shubert Alley&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Regal Cinemas Battery Park&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;911 Memorial&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Metropolitan Museum of Art&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Trump SoHo Hotel&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Bryant Park&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;Four Seasons Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;The Peninsula Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>&quot;The Surrey Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>&quot;The Plaza&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;Mandarin Oriental&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Central Park&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;Gramercy Park Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>&quot;The Pierre Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;The Mark Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;The Greenwich Hotel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>&quot;Trump SoHo Hotel&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_455989476825935873:nk]' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Famous Buildings and Museums&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Parks&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Monuments&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Broadway &amp; Cinema&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Action (Name)]' type='palette'>
            <map to='#17becf'>
              <bucket>(&quot;Jacob Riis Park  Beach&quot;)</bucket>
            </map>
            <map to='#17becf'>
              <bucket>(&quot;The Peninsula Hotel&quot;)</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>(&quot;Coney Island&quot;)</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>(&quot;Literary Walk&quot;)</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>(&quot;Battery Park&quot;)</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>(&quot;Museum of National History&quot;)</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>(&quot;Washington Square Arch&quot;)</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>(&quot;Fort Tilden Beach&quot;)</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>(&quot;Statue of Liberty&quot;)</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>(&quot;Cherry Grove Beach&quot;)</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>(&quot;Rockaway Beach and Boardwalk&quot;)</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>(&quot;Ricahrd Morris Hunt Memorial&quot;)</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>(&quot;The Pierre Hotel&quot;)</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>(&quot;AMC Lowes Lincoln Square&quot;)</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>(&quot;Orchard Beach&quot;)</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>(&quot;Jones Beach&quot;)</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>(&quot;107th Infantry Memorial&quot;)</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>(&quot;Long Beach&quot;)</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>(&quot;The Surrey Hotel&quot;)</bucket>
            </map>
            <map to='#b10318'>
              <bucket>(&quot;Bryant Park&quot;)</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>(&quot;Gramercy Park Hotel&quot;)</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>(&quot;The Mark Hotel&quot;)</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>(&quot;Columbus Circle Fountain&quot;)</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>(&quot;Rockaway beach and Boardwalk&quot;)</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>(&quot;Broadway Theater&quot;)</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>(&quot;Riverside Park&quot;)</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>(&quot;Four Seasons Hotel&quot;)</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>(&quot;Sunshine Cinema&quot;)</bucket>
            </map>
            <map to='#d62728'>
              <bucket>(&quot;Prospect Park&quot;)</bucket>
            </map>
            <map to='#d62728'>
              <bucket>(&quot;The Plaza&quot;)</bucket>
            </map>
            <map to='#dba13a'>
              <bucket>(&quot;The Greenwich Hotel&quot;)</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>(&quot;Grand Army Plaza&quot;)</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>(&quot;Grants Tomb&quot;)</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>(&quot;Coney Island Beach&quot;)</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>(&quot;Rockefeller Center&quot;)</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>(&quot;Empire State Building&quot;)</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>(&quot;State of liberty National Monument&quot;)</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>(&quot;Central Park&quot;)</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>(&quot;Mandarin Oriental&quot;)</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>(&quot;Times Square&quot;)</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>(&quot;Broadway and Shubert Alley&quot;)</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>(&quot;Regal Cinemas Battery Park&quot;)</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>(&quot;911 Memorial&quot;)</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>(&quot;Metropolitan Museum of Art&quot;)</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>(&quot;Trump SoHo Hotel&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:AfternoonPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Trip&lt;=2Miles:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[cnt:Trip&lt;=2Miles:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:HolidayPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:AfternoonPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:HolidayPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:Trip&lt;=2Miles:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:WeekendPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:LateNightPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:LateNightPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#69b764'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[attr:Calculation_455989476824608768:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476824608768:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:Calculation_455989476824608768:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd]&quot;</bucket>
            </map>
            <map to='#b10318'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:MorningPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:MorningPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:EveningPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Trip&gt;=10Miles:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[cnt:Trip&gt;=10Miles:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:EveningPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TotalPassengerCount:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:Trip&gt;=10Miles:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='TaxiPassengerCount' name='[Action1]'>
      <activation auto-clear='true' />
      <source datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' type='datasource'>
        <exclude-sheet name='AvgTipPerMileYear' />
        <exclude-sheet name='PlotLocations' />
        <exclude-sheet name='DrillDownTaxiPassCount' />
        <exclude-sheet name='HolidayCount' />
      </source>
      <link caption='TaxiPassengerCount' delimiter=',' escape='\' expression='tsl:DrillDownTaxiPassCount?%5Btextscan.1p4y8by077ek9p1drtdoy1hc2lyd%5D.%5BName%5D~s0=&lt;[Name]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='DrillDownTaxiPassCount' />
      </command>
    </action>
    <action caption='DailyCount' name='[Action2]'>
      <source datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' type='datasource'>
        <exclude-sheet name='AvgTipPerMileYear' />
        <exclude-sheet name='DrillDownTaxiPassCount' />
        <exclude-sheet name='PlotLocations' />
        <exclude-sheet name='DrillDownDailyCount' />
        <exclude-sheet name='HolidayCount' />
      </source>
      <link caption='DailyCount' delimiter=',' escape='\' expression='tsl:DrillDownDailyCount?%5Btextscan.1p4y8by077ek9p1drtdoy1hc2lyd%5D.%5BName%5D~s0=&lt;[Name]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='DrillDownDailyCount' />
      </command>
    </action>
    <action caption='TipPerMile for Year and Category' name='[Action3]'>
      <source datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' type='datasource'>
        <exclude-sheet name='DrillDownDailyCount' />
        <exclude-sheet name='DrillDownTaxiPassCount' />
        <exclude-sheet name='PlotLocations' />
        <exclude-sheet name='DrillDownTipDistributionYear' />
        <exclude-sheet name='TrendLines' />
        <exclude-sheet name='HolidayCount' />
      </source>
      <link caption='TipPerMile for Year and Category' delimiter=',' escape='\' expression='tsl:DrillDownTipDistributionYear?%5Btextscan.1p4y8by077ek9p1drtdoy1hc2lyd%5D.%5BYear%5D~s0=&lt;[Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='DrillDownTipDistributionYear' />
      </command>
    </action>
    <datasources>
      <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
    </datasources>
    <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='AvgTipPerMileCategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='AvgTipPerMile' datatype='real' name='[Calculation_455989476824608768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TipPerMile]/[TaxiCount]' />
            </column>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
            <column caption='Tip Per Mile' datatype='integer' name='[TipPerMile]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476824608768]' derivation='Avg' name='[avg:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='AvgTipPerMile' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AvgTipPerMileYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='AvgTipPerMile' datatype='real' name='[Calculation_455989476824608768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TipPerMile]/[TaxiCount]' />
            </column>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
            <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
            <column caption='Tip Per Mile' datatype='integer' name='[TipPerMile]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476824608768]' derivation='Avg' name='[avg:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TipPerMile]' derivation='Sum' name='[sum:TipPerMile:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_455989476825935873:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]' scope='rows' value='Total Tip Amount' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='Average Tip/mile' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' enable-instant-analytics='true' formula='min' id='refline0' label='&lt;Computation&gt;:&lt;Value&gt;' label-type='custom' scope='per-pane' value-column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' z-order='1' />
            <reference-line axis-column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' enable-instant-analytics='true' formula='max' id='refline1' label='&lt;Computation&gt;:&lt;Value&gt;' label-type='custom' scope='per-pane' value-column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Total (Tip/mile):&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Total (Tip/mile):&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Total (Tip/mile):&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk] + [textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk])</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DrillDownDailyCount'>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='Afternoon Passenger Count' datatype='integer' name='[AfternoonPassengerCount]' role='measure' type='quantitative' />
            <column caption='Evening Passenger Count' datatype='integer' name='[EveningPassengerCount]' role='measure' type='quantitative' />
            <column caption='Late Night Passenger Count' datatype='integer' name='[LateNightPassengerCount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
            <column caption='Morning Passenger Count' datatype='integer' name='[MorningPassengerCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AfternoonPassengerCount]' derivation='Sum' name='[sum:AfternoonPassengerCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EveningPassengerCount]' derivation='Sum' name='[sum:EveningPassengerCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LateNightPassengerCount]' derivation='Sum' name='[sum:LateNightPassengerCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MorningPassengerCount]' derivation='Sum' name='[sum:MorningPassengerCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:MorningPassengerCount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:AfternoonPassengerCount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:EveningPassengerCount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:LateNightPassengerCount:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:MorningPassengerCount:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:AfternoonPassengerCount:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:EveningPassengerCount:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:LateNightPassengerCount:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]'>
            <groupfilter function='union' user:ui-action-filter='[Action2]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Name]' member='&quot;Coney Island Beach&quot;' />
              <groupfilter function='member' level='[Name]' member='&quot;Long Beach&quot;' />
              <groupfilter function='member' level='[Name]' member='&quot;Orchard Beach&quot;' />
              <groupfilter function='member' level='[Name]' member='&quot;Rockaway beach and Boardwalk&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Multiple Values]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Multiple Values]' scope='rows' value='Number of People' />
            <format attr='height' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' value='66' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' value='70' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Multiple Values]</rows>
        <cols>([textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk] / [textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='DrillDownTaxiPassCount'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Trend Line represents number of taxi trips to that location. &#10;Bar Graph represents number of people going to that location</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[TotalPassengerCount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TaxiCount]' derivation='Sum' name='[sum:TaxiCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalPassengerCount]' derivation='Sum' name='[sum:TotalPassengerCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TotalPassengerCount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TotalPassengerCount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk] + [textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TotalPassengerCount:qk])</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DrillDownTipDistributionYear'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Average tip per mile distribution.&#10;Trend line represents average tip per mile&#10;Bar graph represents Total tip per mile.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='AvgTipPerMile' datatype='real' name='[Calculation_455989476824608768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[TipPerMile]/[TaxiCount]' />
            </column>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
            <column caption='Tip Per Mile' datatype='integer' name='[TipPerMile]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476824608768]' derivation='Avg' name='[avg:Calculation_455989476824608768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TipPerMile]' derivation='Sum' name='[sum:TipPerMile:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Year) 1]'>
            <groupfilter function='member' level='[Year]' member='2015' user:ui-action-filter='[Action3]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]'>
            <groupfilter function='member' level='[none:Calculation_455989476825935873:nk]' member='&quot;Parks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Year)]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Year) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]' scope='rows' value='Avg Tip/Mile' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>LocationType:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Month:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Tip Per Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>LocationType:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Month:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Tip Per Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' y-axis-name='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>LocationType:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Month:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg Tip/Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Sum of Tip Per Mile:&#9;</run>
                <run bold='true'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk] + [textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TipPerMile:qk])</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='HolidayCount'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Name, Color shows details about LocationType. Size shows sum of Weekend Passenger Count.  The marks are labeled by Name. The data is filtered on Year, which ranges from 2010 to 2015.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Holiday Passenger Count' datatype='integer' name='[HolidayPassengerCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HolidayPassengerCount]' derivation='Sum' name='[sum:HolidayPassengerCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_455989476825935873:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:HolidayPassengerCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:HolidayPassengerCount:qk]' />
              <text column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' />
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Locationpolygons'>
      <table>
        <view>
          <datasources>
            <datasource caption='points_tableau' name='textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx'>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[point]' derivation='None' name='[none:point:qk]' pivot='key' type='quantitative' />
            <column caption='Point' datatype='integer' name='[point]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[avg:longitude:qk]' field-type='quantitative' max='-8163766.6918595657' min='-8257293.430468712' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[avg:latitude:qk]' field-type='quantitative' max='4994196.8889617082' min='4943153.0460731648' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:point:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.23999999463558197' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:name:nk]' />
              <path column='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:point:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[avg:latitude:qk]</rows>
        <cols>[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[avg:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='PlotLocations'>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]' field-type='quantitative' max='-8217285.3476178767' min='-8250269.2554336311' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]' field-type='quantitative' max='4984653.7832403854' min='4966652.2423608992' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_4' value='none' />
            <format attr='border-style' id='annotation_5' value='none' />
            <format attr='border-style' id='annotation_6' value='none' />
            <format attr='border-style' id='annotation_7' value='none' />
            <format attr='border-style' id='annotation_8' value='none' />
            <format attr='border-style' id='annotation_9' value='none' />
            <format attr='border-style' id='annotation_10' value='none' />
            <format attr='border-style' id='annotation_11' value='none' />
            <format attr='border-style' id='annotation_12' value='none' />
            <format attr='border-style' id='annotation_13' value='none' />
            <format attr='line-end' id='annotation_14' value='none' />
            <format attr='line-pattern' id='annotation_14' value='none' />
            <format attr='border-style' id='annotation_14' value='none' />
            <format attr='border-style' id='annotation_15' value='none' />
            <format attr='border-style' id='annotation_16' value='none' />
            <format attr='line-end' id='annotation_16' value='none' />
            <format attr='line-pattern' id='annotation_16' value='none' />
            <format attr='border-style' id='annotation_18' value='none' />
            <format attr='line-pattern' id='annotation_18' value='none' />
            <format attr='line-end' id='annotation_18' value='none' />
            <format attr='line-pattern' id='annotation_8' value='none' />
            <format attr='line-end' id='annotation_8' value='none' />
            <format attr='line-pattern' id='annotation_7' value='none' />
            <format attr='line-end' id='annotation_7' value='none' />
            <format attr='line-pattern' id='annotation_6' value='none' />
            <format attr='line-end' id='annotation_6' value='none' />
            <format attr='line-pattern' id='annotation_5' value='none' />
            <format attr='line-end' id='annotation_5' value='none' />
            <format attr='line-pattern' id='annotation_4' value='none' />
            <format attr='line-end' id='annotation_4' value='none' />
            <format attr='line-pattern' id='annotation_3' value='none' />
            <format attr='line-end' id='annotation_3' value='none' />
            <format attr='line-pattern' id='annotation_1' value='none' />
            <format attr='line-end' id='annotation_1' value='none' />
            <format attr='line-pattern' id='annotation_9' value='none' />
            <format attr='line-end' id='annotation_9' value='none' />
            <format attr='line-pattern' id='annotation_10' value='none' />
            <format attr='line-end' id='annotation_10' value='none' />
            <format attr='line-pattern' id='annotation_15' value='none' />
            <format attr='line-end' id='annotation_15' value='none' />
            <format attr='line-pattern' id='annotation_13' value='none' />
            <format attr='line-end' id='annotation_13' value='none' />
            <format attr='line-pattern' id='annotation_12' value='none' />
            <format attr='line-end' id='annotation_12' value='none' />
            <format attr='line-pattern' id='annotation_11' value='none' />
            <format attr='line-end' id='annotation_11' value='none' />
            <format attr='line-end' id='annotation_19' value='none' />
            <format attr='border-style' id='annotation_19' value='none' />
            <format attr='stroke-color' id='annotation_19' value='#ffffff' />
            <format attr='line-end' id='annotation_20' value='none' />
            <format attr='stroke-color' id='annotation_20' value='#ffffff' />
            <format attr='line-end' id='annotation_21' value='none' />
            <format attr='border-style' id='annotation_21' value='none' />
            <format attr='line-pattern' id='annotation_21' value='none' />
            <format attr='border-style' id='annotation_20' value='none' />
            <format attr='line-pattern' id='annotation_22' value='none' />
            <format attr='line-end' id='annotation_22' value='none' />
            <format attr='border-style' id='annotation_22' value='none' />
            <format attr='line-pattern' id='annotation_23' value='none' />
            <format attr='line-end' id='annotation_23' value='none' />
            <format attr='border-style' id='annotation_23' value='none' />
            <format attr='line-pattern' id='annotation_24' value='none' />
            <format attr='line-end' id='annotation_24' value='none' />
            <format attr='border-style' id='annotation_24' value='none' />
            <format attr='line-pattern' id='annotation_25' value='none' />
            <format attr='line-end' id='annotation_25' value='none' />
            <format attr='border-style' id='annotation_25' value='none' />
            <format attr='line-pattern' id='annotation_26' value='none' />
            <format attr='line-end' id='annotation_26' value='none' />
            <format attr='border-style' id='annotation_26' value='none' />
            <format attr='line-pattern' id='annotation_27' value='none' />
            <format attr='border-style' id='annotation_27' value='none' />
            <format attr='line-end' id='annotation_27' value='none' />
            <format attr='line-pattern' id='annotation_28' value='none' />
            <format attr='border-style' id='annotation_28' value='none' />
            <format attr='line-end' id='annotation_28' value='none' />
            <format attr='line-pattern' id='annotation_29' value='none' />
            <format attr='line-end' id='annotation_29' value='none' />
            <format attr='border-style' id='annotation_29' value='none' />
            <format attr='line-pattern' id='annotation_30' value='none' />
            <format attr='line-end' id='annotation_30' value='none' />
            <format attr='border-style' id='annotation_30' value='none' />
            <format attr='line-pattern' id='annotation_31' value='none' />
            <format attr='border-style' id='annotation_31' value='none' />
            <format attr='line-end' id='annotation_31' value='none' />
            <format attr='line-pattern' id='annotation_32' value='none' />
            <format attr='line-end' id='annotation_32' value='none' />
            <format attr='border-style' id='annotation_32' value='none' />
            <format attr='line-pattern' id='annotation_33' value='none' />
            <format attr='border-style' id='annotation_33' value='none' />
            <format attr='line-end' id='annotation_33' value='none' />
            <format attr='line-pattern' id='annotation_34' value='none' />
            <format attr='line-end' id='annotation_34' value='none' />
            <format attr='border-style' id='annotation_34' value='none' />
            <format attr='line-pattern' id='annotation_35' value='none' />
            <format attr='border-style' id='annotation_35' value='none' />
            <format attr='line-end' id='annotation_35' value='none' />
            <format attr='line-pattern' id='annotation_19' value='none' />
            <format attr='line-pattern' id='annotation_20' value='none' />
            <format attr='line-pattern' id='annotation_36' value='none' />
            <format attr='border-style' id='annotation_36' value='none' />
            <format attr='line-end' id='annotation_36' value='none' />
            <format attr='line-end' id='annotation_37' value='none' />
            <format attr='line-pattern' id='annotation_37' value='none' />
            <format attr='border-style' id='annotation_37' value='none' />
            <format attr='border-style' id='annotation_38' value='none' />
            <format attr='line-pattern' id='annotation_38' value='none' />
            <format attr='line-end' id='annotation_38' value='none' />
            <format attr='border-style' id='annotation_39' value='none' />
            <format attr='line-pattern' id='annotation_39' value='none' />
            <format attr='line-end' id='annotation_39' value='none' />
            <format attr='line-pattern' id='annotation_40' value='none' />
            <format attr='border-style' id='annotation_40' value='none' />
            <format attr='line-end' id='annotation_40' value='none' />
            <format attr='line-pattern' id='annotation_41' value='none' />
            <format attr='line-end' id='annotation_41' value='none' />
            <format attr='border-style' id='annotation_41' value='none' />
            <format attr='border-style' id='annotation_42' value='none' />
            <format attr='line-pattern' id='annotation_42' value='none' />
            <format attr='line-end' id='annotation_42' value='none' />
            <format attr='line-pattern' id='annotation_43' value='none' />
            <format attr='line-end' id='annotation_43' value='none' />
            <format attr='border-style' id='annotation_43' value='none' />
            <format attr='line-pattern' id='annotation_44' value='none' />
            <format attr='line-end' id='annotation_44' value='none' />
            <format attr='border-style' id='annotation_44' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='true' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='0.69165748357772827' />
                <format attr='mark-color' value='#ffaa00' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.689249400000001</value>
                <value>-74.044500400000004</value>
                <value>&quot;State of liberty National Monument&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.660203699999997</value>
                    <value>-73.968955800000003</value>
                    <value>&quot;Prospect Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='5' y='-15' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#ffaa00'>Æ </run>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run fontcolor='#ffaa00'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.574926099999999</value>
                    <value>-73.985941400000002</value>
                    <value>&quot;Coney Island&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='3' y='-16' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.564253999999998</value>
                    <value>-73.883913000000007</value>
                    <value>&quot;Fort Tilden Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-61' y='17' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#ffaa00'>Æ </run>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.565084599999999</value>
                    <value>-73.872757300000004</value>
                    <value>&quot;Jacob Riis Park  Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='63' y='19' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#ffaa00'>Æ </run>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.586376700000002</value>
                    <value>-73.800476799999998</value>
                    <value>&quot;Rockaway Beach and Boardwalk&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='3' y='-18' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]&gt;</run>
              <run bold='true'>&#10;\</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.588437300000002</value>
                    <value>-73.657908000000006</value>
                    <value>&quot;Long Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='8' y='32' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.629813900000002</value>
                    <value>-73.503009899999995</value>
                    <value>&quot;Jones Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='18' y='-15' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.689249400000001</value>
                    <value>-74.044500400000004</value>
                    <value>&quot;State of liberty National Monument&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-3' y='23' />
          </annotation>
          <annotation class='point' id='10' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.703277499999999</value>
                    <value>-74.017027900000002</value>
                    <value>&quot;Battery Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='19' y='21' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.813404499999997</value>
                    <value>-73.963067100000004</value>
                    <value>&quot;Grants Tomb&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-2' y='-20' />
          </annotation>
          <annotation class='point' id='12' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.8012339</value>
                    <value>-73.972309600000003</value>
                    <value>&quot;Riverside Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='96' y='-1' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='185'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.781324099999999</value>
                    <value>-73.973988199999994</value>
                    <value>&quot;Museum of National History&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-96' y='-4' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.711540499999998</value>
                    <value>-74.013272499999999</value>
                    <value>&quot;911 Memorial&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='98' y='0' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.714992160000001</value>
                    <value>-74.015251320000004</value>
                    <value>&quot;Regal Cinemas Battery Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-97' y='-11' />
          </annotation>
          <annotation class='point' id='16' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.659974800000001</value>
                    <value>-73.089927299999999</value>
                    <value>&quot;Cherry Grove Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='3' y='-11' />
          </annotation>
          <annotation class='point' id='18' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.862961900000002</value>
                    <value>-73.7926456</value>
                    <value>&quot;Orchard Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='9' y='-14' />
          </annotation>
          <annotation class='point' id='19' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.719845999999997</value>
                    <value>-74.009893000000005</value>
                    <value>&quot;The Greenwich Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-87' y='-13' />
          </annotation>
          <annotation class='point' id='20' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.725468999999997</value>
                    <value>-74.005332999999993</value>
                    <value>&quot;Trump SoHo Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-51' y='-12' />
          </annotation>
          <annotation class='point' id='21' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.723024000000002</value>
                    <value>-73.989960999999994</value>
                    <value>&quot;Sunshine Cinema&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='97' y='1' />
          </annotation>
          <annotation class='point' id='22' mark-position='1' pullback='12' text-width='134'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.731465800000002</value>
                    <value>-73.997095599999994</value>
                    <value>&quot;Washington Square Arch&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='6' y='-25' />
          </annotation>
          <annotation class='point' id='23' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.738523999999998</value>
                    <value>-73.985742000000002</value>
                    <value>&quot;Gramercy Park Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='92' y='1' />
          </annotation>
          <annotation class='point' id='24' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.748440500000001</value>
                    <value>-73.985664400000005</value>
                    <value>&quot;Empire State Building&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='67' y='16' />
          </annotation>
          <annotation class='point' id='25' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.7535965</value>
                    <value>-73.983232599999994</value>
                    <value>&quot;Bryant Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='91' y='4' />
          </annotation>
          <annotation class='point' id='26' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.758740199999998</value>
                    <value>-73.978673599999993</value>
                    <value>&quot;Rockefeller Center&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='62' y='13' />
          </annotation>
          <annotation class='point' id='27' mark-position='1' pullback='12' text-width='198'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.7578253</value>
                    <value>-73.987176599999998</value>
                    <value>&quot;Broadway and Shubert Alley&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-95' y='6' />
          </annotation>
          <annotation class='point' id='28' mark-position='1' pullback='12' text-width='200'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.779186500000002</value>
                    <value>-73.963534800000005</value>
                    <value>&quot;Metropolitan Museum of Art&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='97' y='-11' />
          </annotation>
          <annotation class='point' id='29' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.759011000000001</value>
                    <value>-73.984472199999999</value>
                    <value>&quot;Times Square&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-31' y='-11' />
          </annotation>
          <annotation class='point' id='30' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.763416999999997</value>
                    <value>-73.983394000000004</value>
                    <value>&quot;Broadway Theater&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-93' y='-4' />
          </annotation>
          <annotation class='point' id='31' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.762346999999998</value>
                    <value>-73.971311999999998</value>
                    <value>&quot;Four Seasons Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='91' y='5' />
          </annotation>
          <annotation class='point' id='32' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.761718999999999</value>
                    <value>-73.975258999999994</value>
                    <value>&quot;The Peninsula Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='54' y='19' />
          </annotation>
          <annotation class='point' id='33' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.775274000000003</value>
                    <value>-73.963404999999995</value>
                    <value>&quot;The Mark Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='35' y='-9' />
          </annotation>
          <annotation class='point' id='34' mark-position='1' pullback='12' text-width='148'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.774287000000001</value>
                    <value>-73.963970000000003</value>
                    <value>&quot;The Surrey Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='74' y='10' />
          </annotation>
          <annotation class='point' id='35' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.774866000000003</value>
                    <value>-73.981645999999998</value>
                    <value>&quot;AMC Lowes Lincoln Square&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-88' y='-12' />
          </annotation>
          <annotation class='point' id='36' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.768971000000001</value>
                    <value>-73.983044000000007</value>
                    <value>&quot;Mandarin Oriental&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-19' y='-11' />
          </annotation>
          <annotation class='point' id='37' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.767885</value>
                    <value>-73.982622000000006</value>
                    <value>&quot;Columbus Circle Fountain&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='11' />
          </annotation>
          <annotation class='point' id='38' mark-position='1' pullback='12' text-width='259'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.771482499999998</value>
                    <value>-73.967747399999993</value>
                    <value>&quot;Ricahrd Morris Hunt Memorial&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='127' y='12' />
          </annotation>
          <annotation class='point' id='39' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontalignment='0' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.769249000000002</value>
                    <value>-73.969458599999996</value>
                    <value>&quot;107th Infantry Memorial&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='88' y='12' />
          </annotation>
          <annotation class='point' id='40' mark-position='1' pullback='12' text-width='67'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.7723522</value>
                    <value>-73.9715901</value>
                    <value>&quot;Literary Walk&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='4' y='-19' />
          </annotation>
          <annotation class='point' id='41' mark-position='1' pullback='12' text-width='71'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.771132899999998</value>
                    <value>-73.974187400000005</value>
                    <value>&quot;Central Park&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-8' y='20' />
          </annotation>
          <annotation class='point' id='42' mark-position='1' pullback='12' text-width='120'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.765247000000002</value>
                    <value>-73.971997999999999</value>
                    <value>&quot;The Pierre Hotel&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='65' y='-1' />
          </annotation>
          <annotation class='point' id='43' mark-position='1' pullback='12' text-width='56'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.764463999999997</value>
                    <value>-73.974489000000005</value>
                    <value>&quot;The Plaza&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-32' y='7' />
          </annotation>
          <annotation class='point' id='44' mark-position='1' pullback='12' text-width='132'>
            <formatted-text>
              <run bold='true' fontcolor='#ffaa00'>&lt;</run>
              <run bold='true' fontcolor='#ffaa00'>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
              <run bold='true' fontcolor='#ffaa00'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Latitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Longitude:qk]</field>
                      <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.764591000000003</value>
                    <value>-73.973652299999998</value>
                    <value>&quot;Grand Army Plaza&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='62' y='7' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='TrendLines'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>You can select multiple lines to drill down&#10;DailyCount - Passenger Count Distribution for times of day&#10;TaxiPassenger Count - Graph representing the number of taxi trips and number of passengers</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Taxi Count' datatype='integer' name='[TaxiCount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TaxiCount]' derivation='Sum' name='[sum:TaxiCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]'>
            <groupfilter function='member' level='[none:Calculation_455989476825935873:nk]' member='&quot;Beaches&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' included-values='in-range'>
            <min>1</min>
            <max>12</max>
          </filter>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;107th Infantry Memorial&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;911 Memorial&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;AMC Lowes Lincoln Square&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Battery Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Broadway and Shubert Alley&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Broadway Theater&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bryant Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Central Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cherry Grove Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Columbus Circle Fountain&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Coney Island&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Coney Island Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Empire State Building&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fort Tilden Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Four Seasons Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gramercy Park Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grand Army Plaza&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grants Tomb&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jacob Riis Park  Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jones Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Literary Walk&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Long Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mandarin Oriental&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Metropolitan Museum of Art&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Museum of National History&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Orchard Beach&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Prospect Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Regal Cinemas Battery Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ricahrd Morris Hunt Memorial&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Riverside Park&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rockaway beach and Boardwalk&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rockaway Beach and Boardwalk&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rockefeller Center&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;State of liberty National Monument&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Statue of Liberty&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sunshine Cinema&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Greenwich Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Mark Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Peninsula Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Pierre Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Plaza&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Surrey Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Times Square&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trump SoHo Hotel&quot;' />
              <groupfilter function='member' level='[none:Name:nk]' member='&quot;Washington Square Arch&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' scope='rows' value='Total Taxi Trips' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' field-type='quantitative' min='1' range-type='fixedminuniformmax' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Name:&#9;</run>
                <run>&lt;</run>
                <run>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</run>
                <run>&gt;</run>
                <run>&#10;No. of Taxi Trips:</run>
                <run>&lt;</run>
                <run>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]</run>
                <run>&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1216' />
                <format attr='maxwidth' value='1216' />
                <format attr='minheight' value='743' />
                <format attr='maxheight' value='743' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1216' />
                <format attr='maxwidth' value='1216' />
                <format attr='minheight' value='743' />
                <format attr='maxheight' value='743' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1216' />
                <format attr='maxwidth' value='1216' />
                <format attr='minheight' value='743' />
                <format attr='maxheight' value='743' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:TaxiCount:qk]</rows>
        <cols>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='WeekendCount'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Name, Color shows details about LocationType. Size shows sum of Weekend Passenger Count.  The marks are labeled by Name. The data is filtered on Year, which ranges from 2010 to 2015.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YellowTaxiTrips_2010_2015' name='textscan.1p4y8by077ek9p1drtdoy1hc2lyd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1p4y8by077ek9p1drtdoy1hc2lyd'>
            <column caption='LocationType' datatype='string' name='[Calculation_455989476825935873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Category] = &quot;A&quot;) then &quot;Parks&quot;&#13;&#10;ELSEIF ([Category] = &quot;B&quot;) then &quot;Hotels&quot;&#13;&#10;ELSEIF ([Category] = &quot;C&quot;) then &quot;Monuments&quot;&#13;&#10;ELSEIF ([Category] = &quot;D&quot;) then &quot;Beaches&quot;&#13;&#10;ELSEIF ([Category] = &quot;E&quot;) then &quot;Famous Buildings and Museums&quot;&#13;&#10;ELSEIF ([Category] = &quot;F&quot;) then &quot;Broadway &amp; Cinema&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Weekend Passenger Count' datatype='integer' name='[WeekendPassengerCount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_455989476825935873]' derivation='None' name='[none:Calculation_455989476825935873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WeekendPassengerCount]' derivation='Sum' name='[sum:WeekendPassengerCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_455989476825935873:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</column>
            <column>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:WeekendPassengerCount:qk]' />
              <text column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' />
              <color column='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='56'>
    <window class='worksheet' name='PlotLocations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Locationpolygons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:name:nk]</field>
            <field>[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:point:qk]</field>
            <field>[textscan.08hm3gp0s3sqkl1bjjsmn0mhnzpx].[none:shape:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='HolidayCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='71'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='WeekendCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='71'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TrendLines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='127'>
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DrillDownTaxiPassCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='71'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[Action (Name)]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[io:Action (Name):nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DrillDownDailyCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AvgTipPerMileYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]</field>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
                  <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.80423256393586351</value>
                <value>2015</value>
                <value>&quot;[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[:Measure Names]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476828123138:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Category:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[sum:MorningPassengerCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DrillDownTipDistributionYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]' type='color' />
            <card pane-specification-id='2' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='71'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Month:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Name:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='AvgTipPerMileCategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[avg:Calculation_455989476824608768:qk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Calculation_455989476825935873:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Category:nk]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:ok]</field>
            <field>[textscan.1p4y8by077ek9p1drtdoy1hc2lyd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='PlotLocations' width='192'>
      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
      JNAuKPP/AFeGqCNJ+WNJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Locationpolygons' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HolidayCount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WeekendCount' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3Rc153n+XmpMlCFnBMRCWZSlEhJVKAkS7KiUzuNYzu3veOdnTm7s7M9
      x3PmdO927+x4OozdDm1bdtuWg2xLVktWoAJJScwBDCBA5JyBKlSueu/uH2AAiFQFFAmQeJ9z
      eA5R7937bgH3+276BUkIITAxWaPIK90AE5OVxBSAyZrGFIDJmsYUgMmaxhSAyZrGFIDJmsYU
      gMmaxhSAyZrGFIDJmsYUgMmaxhSAyZpGXU7hWCyGruupaouJyQ1nWQKIRCLYbLZUtcXE5Iaz
      LAFIkoSqLqsKE5MVxVwDmKxpTAGYrGlMAZisaUwBmKxpTAGYrGlMAZisaUwBmKxpTAGYrGlM
      AZisaUwBmKxpTAGYrGlMAZisaUwBmKxpTAGYrGlMAZisaUwBmKxpTAGYrGlMAZisaUwBmKxp
      TAGYrGlMj3aTWQghCPqijPX5CfoiGLrAYldJz7aTWeBCUW+d96YpAJMrCCEY7vLRdLifkZ5J
      hDE7fZzFrlKxOZeqHXlYHdoKtDK1SMtJkhcIBHA6nalsj8kKEYvoNLzRSdf5ERLpETaXxvaH
      K8iv8Fz/xl1Hbp2xzGTJxKM6h1+4SOe5xDo/QNgf49DvL14SzM2baNQUwBpHCMHJ1zoY6vQl
      XdYwBCdf7WB8IHAdWnZjMAWwxulvnaC7cXTJ5fW4wanXOzF0I4WtunGYAljDCCFoOty37Hom
      BgP0t06koEU3HlMAa5jJ0RDj/amZvnSdH0lJPTcaUwBrmJGeyZTVNdrrR4/ffNMgUwBrGP94
      JGV1xaM60VA8ZfXdKEwBrGH0eOqSmwgh0G/ChbB5ErwKEEIg/H7irc0YE+MgKyh5eajrqkDV
      kCTpujxXs6buzy/L8k1pImEKYIXR+/sIvvAcsVPHwZj5BpXsDqz37sX28GPIjtSfuKdn21NW
      l9WpYbsJTSNMAawgkWOHCf7sR4hwaM7rIhQk/KcX0Xu6cX7ha8j21HVYgNwyN5JEwqe/C9ZV
      mo4kX5+R6npy841Ztwix82cI/Oh783b+GfeePU3gx99DGKmdY9ucGnnrUmDLI0HZxmwEAkPo
      RPUoMSN2U5hImCPACmCEggR++s+gJ75rEjt9gsg7b2Pbc/+SnytiUeIXm4m3tyLiMZSCIuo2
      VzDY7p3T8jNRCio9TDgHeLnpAK3eZvyxSRRJIdOWzcbMzdxdeD/pFveS67+emNagK0B43ysE
      f/3zpMvJ2Tm4/8vfICWZmFAIQbytheAvn0Hv7ppxTUp301dyN83RMsQSJgTCHqPvtiOcC50E
      5u5KNsXGB9Z9lD2Fe5Gl1TXpWF2tWQMIIYieOLqkssbIMHpXR9Ll9PZW/N/5H7M6P4Dweclv
      /BMVkcbk22OPcrzmD5wLnWC+zg8Q1sM8e/GnvND+21U3LTIFcKOJRtAHB5ZcPN7dOfMDIcDQ
      wYiDMGataEUsRvC3v0T45z/1lQyd0uHDbNliQ7MpCbUjq8RFz/ZDjGmJfReB4JWuFzk+fHhV
      icBcA9xgRCwO8djSy4cuLZrjYeg+Bt2Hwdc3JQJHJuRvgoo94MgCSSLe1UG8vW3xikNBCqPt
      FH3uUVpPDNLTNEZgYuZJsaLK5JSmU7Elh3FPLxfONCTXdgTPtT7LluwdaNLq2DI1BXCDkTQN
      NAuEFt/9mbO8wwFDjfDed2Dsmo49ypQgGn4NWz8OdY+hd3dOiSMB4h1tpDktbNhTQv3dxYT9
      MQLeCIZuYLGruDw2FE1GkiRePPcvLDTtmY/xyCjnRk+zNee2pMteD0wB3GgsFpT8AuI+75KK
      q8oovP59iCxgyBbxwZEfQGAE9MLEKzcMhBAMhvo5OXyMrsl2IkaULGsW9Y5N1CubUSUrcSNO
      q/fiktoP0DTRaApgrSJJEpYdtxNvvpB0WcVjRen8w8Kd/zLCgHO/R8l+H4medomCfF7q/AOv
      9/yJUDw449rB/rcoT1/HJ2o+h9viIaQvbQQDGAsv3QEn1ZiL4BXAuusu5KycpMvZy+JIkSQc
      T4SB6juCkr34YZehqbyY3ckfO343q/PD1Py93dfKPzT8v/QGepJp9iyul23TUjAFsAJINjvO
      z30RtMQXgpbNG9A8yb91pcgY9jtqwWJZ8L7mHQUcpGnR+nxRL39o+xUWeeH6FiLHnrvksqnG
      FMAKoVXX4frS15GcrsXv3XYbzqceQUpk6jNX+VwN52e+gOTJmH3RakV73yMcrJcxSMzUomuy
      A0VKbLt0LuoyNiy5bKox1wArhRBY6utRvvE1wi/9gWhTKyIyc7dG8mRgu/cBbHsfQho8teRH
      SeEJLPfcgVZZQ/TkceLtLYh4HKWgCMu2HUxk2ek9/mbiTUfgtnrwRb0Ji+YyefYC6jwbMHSd
      sH+SwPgYCIEtLQ2HJwNFvbHbo6YAVoLgGJx/HtoPooTGcaYZOHZaiMc8GHl3Q04VSk4eSkkp
      0uUOodqW/jzVhiRJSBmZ2PY+BDw04/Kkr5WYEU2qyjQtnd0F9/BO/1sJl5ElmcdzHufMy3+k
      51wDgfGZi2Grw0leVS219+wls6gkqfYslVteAMIwiIaChP1+wv5JIn4fsUiEeDQyZV0pSVPO
      HJoFi8OB1eHClpaGzZWGZrOnfsE2dB7e/v/AP/MEVSKGJgVg7AWo/DyU74LpdjPphaBooC/h
      EC2jHCMYIHbqBLFzDRgT40gOJ2pNHZYdt6NZVGQSnwIBWBUbH636N4yFR2gcP7vo/bIhsXWw
      iM59L6DH5v4OkWCAroYTdJ05SdmW7Wx74kNYr4MfxHRuKQEYuk5o0sd4Txcj3R14B/rxDQ0Q
      DQaJx6IJG75LkoRqsWJxOknPzSejsJis0nIyi0qwOl1LF4WvD976WwgMz39PPDS1h29zQ/ld
      Vz93ZkN2LQwu3tmmI1Q78aCD4N/+V/T+mSFQYg0nCb/6Es4nHsOlupiIJb7DVJpWjkWx8tWN
      3+SF9ud4u2/fvKOIR/VQ1WAlrTtAQkdyQtB56jjewQH2fOaLONxzrF1SxE1tDSqEQI/HGOlo
      Z6C5kYGLF5gcGcLQU+frOh1F03DnFZBXWUPRhs1kFBYjKwkuBoWAA/8dWt9I7P70Qnjy70Bz
      XC3fcxTe+Kspu58EidvqmTzqRwQWCH+iqrx5l5vXCkYgAW3bVQf/x/ZvkecouNQ0wVBogKND
      h7g4cQFvdBxFUslz5LMhcwvGwTb6TixtDZNZXMreL/8v121tcFMKQAjBeG83rUfepa/xLOEF
      DL2uJ86MLIo3bWHdbbtIz8lb+ObgGDz3pak3fKLs/U9QdufVn4UBx34MZ39PImYIwl2O76wT
      vXdxg7WIw8L3H1Hot84+A7iWbcFqdpZ8EsWVyZaKhd/OfRfOc+CZ7y1a50Ksv+8hNj/8+LLq
      mI+bagoUi0ToOn2c1iPvMt7bw1JsUVJJYHyUpv1v0HzgTbLL11Fz130U1KxHmWt/f6Iruc4P
      MNw8UwCSDNs/BbIGZ38HxgLrgYItxHMfRX/1hwk9yhqM8jH/7TyT3spYZO4gVxIyu7PupbjD
      Rqe3H2uOREW6DafbOqdDvKHrnNv3ckLPX4jmd96mevce7Ompd6q5KQQQi4RpO/oeze+8TXBi
      fKWbMwshBMPtrQy3t5KWnUvdPXsp23rbTCHEFn+zzuJSmcsJK4a7fAQmwuixPVg9+Xi8B8iS
      WlCNICCmhOEpger3QeX9xF95JSmH38K+CP/bY/8nr3S9yKnh4wTifoQQqLJK5mQx64Z3kH66
      gInYVJ3h3hH2nR7B5rRQuiGLddvysLuuHpCN9XQx1jPlg+AuqcbpUAlNDDM+mFgUOWdGJoHx
      MfRYlI6TR1l/74MJf5dEWdUCiMdidBw/zIX9+6b2i28CJkeGOPq7Z7lw4E02PfR+ijdsRpJl
      sC9hIWfPJOSPcuatbvqaxzBmuC16gCew2+JU1cC6zZkorsyp5yhTwjMC/qQeJwJ+smw5fLz6
      szxZ/mFGwsOEI2F6DvvxNQkQEsY1o64QEPJHaTrcT8eZYbY8UE5RTQaSJDHY2nzlPps7E1X4
      SSuuI6twkrhsJxYK4czy4B/3YrfZiYQDWJ0uQhMTIOJ4ikpofHMfAhhqvbi2BDDY2szJF3+P
      d2D5wVtXgsnhQd79xY/Jraxh+xMfxJ1ROtU5Q4mOYBIjejlHfnaOcGD+qU4orHKmAXpHDO54
      woNduTrqyO7kHN4l99QUQ5IkXJY07JKTQ69dxNc+1Z7FiATjHPljC1seKKNyWx6+aY4/Qo8z
      1HqOmLOU/Ayw56aBoYKWTmaBldCEH0dGFnaHHT0aIewdJxy4OmX0DQ9i6HFkJbVddtUJIBLw
      c/b1l2k98m7KoyCsBEOtzbz6j/+N+vseoq7qfShnfpVQuXFtA+8ckNETdJ4Z6/Nz8DcXuOdj
      66+kLtLq6gnJ8qx4Q/Oh1W+68n8hBKf2dTDYnrzZdsObnTjdVmLTIl4MXTgxtWSLdtE7DlJH
      L0LoyPJpPGWVhPs7CIYiyIqCoRvIsoTo6Lgy3ujxOHpcT7kAVo0tkBCCobYWXv/u/6Dl0MFb
      ovNfxojHOfv6y7z5TjcT6uL2+TEtiyNjDycTNAKAybEwp/Z1XonwoJSUoa1PzO5Gzs7Bsn3n
      lZ9HeibpPLe0iM/CgNNvdGIY07rXtLWIlpZDyYZ68srLMfQ4Y21NBEMRskrLL21hCwzDmNEH
      ZFlBllPfXVfFCGAYBo1vvcb5N165bnv4q4HRgSHeGHGyrSCPcscwkphD5BkVtFk+SmDAeuUj
      w9DRDQNV0ZjrDE4IAyEkZFmit3mMse15ZBa6EJKM+uTHiPX3w9gCndlmw/GxTyGnpV+qT9By
      bGBZm2yBiQhR5j4jUWxp2B0WFCWD3Jo07A47VhsozlxE1M/YwOy2OtzuuXfXlsmKCyAaCnL0
      d8/Sc/b0SjflhhCLC450pzFeUcrWWheyr2fqYMuVByV3YJTeTdcvW4DwlTKnWs9AdBR3Vh02
      DYyIH487j6HxAQpzK+jo3E9QqmRH1ToQ0HFmGJvLwolX2pkYCuAs/iC1tv3Y+5tm7QophUU4
      /uzfoNbVX/ksEowz3JV8yqRZ31XPnvfaeHcbQ/0+6h98P0YkRmi0FYslC1taGswhgNzK6mW3
      Zy5WVAD+sVHe++VPrmyVrSUuto/jtxSw+6N/hWa1Te3xSxKBsRCTY+EZ92Zm5yP5ozQ0vERF
      /V46W99FlTRsabkcOX+Y6rJypvuYD3f50GPGlU48gYXW6ifZ9TGVyPlTdA820qGOMZmXjqN6
      A8VZQapik7i0NCRJwj8eIh5b/hRUcxSiCg8h70wTi/BwO2FJgIALb7yMuBLNopW5hh1Jlind
      vH0qiHA4BJEIWKxI9uXbaq2YALxDAxz86Q/xjy5gF3OL0990nv3P/IA7P/G5K4c8AW9kVh8Q
      gQlGfAFKSjaQ5XQwnpZPmt2Jx1NIuiubwGQ/BcVX/QoiwTjjgzNNH7zeGGftGu9UdtOU2UVc
      xIEJGOiCgZfJsGbyYMmj3Fv4ACH/0qNWTMfQJWp23UvDK89fc0Vc+Y7GjIXO3HOuorqN2Pv6
      mPz5M+i9XYhYDEnTUApLsO19CG3rDqRETVKuYUVMIcb7ejnwzPcILdEx/FbDnVfAvZ//KvZ0
      N73NYxx+oWXWPYahI0nKnGuAa5EViaLaTLrPXzU3DhQNcrL4ZYL6QmYjErvz7+Ye40lOvrT8
      UVlRZd7/1S3s/8l3GOlIIDTLHFgtVu50paO2NM97j7btNlyf/SKSLfngwcq3vvWtby2pZUAs
      FsOyiKvdtXgHB3j7R98hPLn8OeatQiTgp7+5kZKNWzB0eY7dF8GBd35CzFlB2NdDIOTDF5gg
      EAkiCZlILIxVu7poVi0Ku56qRrMqSJKErTTOwczfEjAW/533+LsQcQmtOwspEcu4BbC7NGrv
      KKKgZj39zeeJLGSQNweqZmGrbuDo6V7wPmOgD31wAMu226YOHZPghm6DBsbHOPizH6yY8dpq
      xjc0wDs//xE2p4SizfyzREPDjMdttLS+x9n20zS0HKOh5RgXWk9w6vzLtA70z7jf6bFic2nU
      7S7krg/X0FN+ikkj8dH2eOQAIfvyR+esojQA7Olu7v/CN8ivrku4bHpuPnfdcReekcSmyLGT
      x6ZyLCTJDRNAJBjg3V/8GP/ozZlN8EYw0tnOyRefJSN/5lDu9Y1zz66PUJlfRHF+FWUF1VQU
      VlOQU4KMTHF++Yz7C6umTBEkScIf93NqJLmOESHEcFbrcr8OJfVZV/5vS0tjz2e+xO6PfxZP
      YfG8b2qHJ4Ot73+aB7/6TRxJho4Jv/la0mEXb8giWBgGx37/qzW525MsfY1nySi1ATVcNj/I
      yasFIKNs86z7O60OsuxXpz8Wm0rZxqshVwaD/QRjyadCjRWOI/dLGPrSloiZhS5yS9NnfCbJ
      Mjn1tYwV6Hg7T9LT0Uh8MkiWJYvNJbezrnwzGQXFKJqGCIfmDOa7EHpvNyIcQrI7Ei5zQwRw
      7s1X18w+fyoY7z6OmmZH0koXvbesYOb+eP2eYuxpV9dloXgwacd1AFxx1t9VxLn9yccA0qwK
      2x4qR1auvuUHgv283Pk8J4aPELtsxp099a+dAMeMLqpHz/Ko60nqMzchIhFELDk/ZRGLQTgM
      q0kAg63NnN/3p+v9mFsLIdADh3EV5hIOJu4MX7k9j4rNMwNu2VV70v6+AE7NSc3WAkK+KG2n
      hhIup2gyOx+vxJ0z1QmFELzW/RJ/7Hjuasefh4veC7Q0NHFb7h18ovQTSJoFEU1cBJKqgTW5
      4AHXVQCRQICjz/1yVYXDvlkQehRFP0Zx3eP0Ni+cwUVWBLklOjatnXOvn0O12cgoKCKrtJw8
      RwF21UEgnpxpdHlaJZIssWVvGa5MG43v9BKLLGymkpHvZMveMjIKprbGDWHwXOsv2deT+AtQ
      IDg6dAhf1Msn87NRWxNvt1JYhJRkHrXrJgAhBA2v/PGmseNfjUz0dVK2tZfSp7dx8dgAo72T
      V+fk0tQ2ox5qI+proPv4BNduFtrT3dTcfR8bMzdzePjdhJ9rV+xsz7kdIQSGIcgtc2O1a3Sd
      G2G0d3LGKbGiySiSF1keZOuDD5CRP3UgJ4Rgf9++pDr/dJomGnmu3MFHWhPfqbHe/1DSJ8PX
      TQBDrRdpP3b4elW/Zjj3+ku87xsb2PNndehxg9BkFEM3UFRo+NNv6Oo4MW/ZkM/L6ZeeJ704
      C9d6B345Ma+0u3MfINqhcfBcE2N9fvT4zOmTrEhk5Luo2JxD/jonr/zd3zDpHafxjSh3fuKz
      AIyGR/h926+X/L0BTucE2VBtY+PFxTPaa1u2z7BmTZTrIoB4LMrJF383ZeNhsizi0SjdDSep
      3/swiirjyrBd2VXrOj1/559RR88om+LpNGyDgDG/CCQkqgLbsb5dyfEpL5g5MXTBaO8ko32T
      ZBU6ka1ZKFqAYdL5yRtt7KrJ5mTwJSJ6eN46EkKCN+9wstW+nnjD/FEltE1bcX72S0syh7gu
      Amg/egjvYP/iN5okRPN7+1m3cze2S+bK/U3naTue3OhqG4jyWGQPp3O6afE2oYuZ8/k0xU1V
      726ye6uIJvriEjDaG0CWb6fuoQd5dVTQ2+llZDLIYNaxGbeOXRjE5zXIKPfgzps5T/d1TmAt
      SMdqmT3Z6ddHGfn4VynauZvwG6+i9/WArqNL4M20Mnp7HWzbRnqkjXy5ELfVk1QivpQLIBYJ
      c+7NV1Nd7Zom4vdz4cCbbH3/UwghaNy/b0nZrYMnW/n6v/uPdAU6afE2MREZx6JYKHKUED7h
      ZKRn8anGXBiGxMWjfjKKHIxbFZyeCSbjM0+Sg4OT6JoTJic59VYnqk3GYpGIRgWyoiIahnBl
      2gh5Y5Q9sA679epcvnmymXW3P4Fl5y5Ck6O83fpHDntPMIQPg2NwcUpsdtVBraeeR0ofpyxt
      XULrgZQL4OK7+4mYpg4pp+XQAWruuhchjCUfKAbGx5js76eypJpK99Xzg7ZTQ5w637Gs9glD
      kNEX5C8+Uke7eprTF64RqCShOS0Y4RCuAhdG3CDYPYqWnYa/P4glx4aqxxjvmaQkLmCaAAaC
      U37h/cFeftz8T3T7r0kUeIlQPMipkWOcG2vg8fIP8GDxoyjywtOilAogFg5z8d39qazS5BJ6
      LEbTwTcprK3HiCfpKzmNicF+MkvKrvwc9EU4d2BhY7NEMXTBhbe7MO6ZffJcuLucWERHUd2k
      X4ohNNmiEbG7qXvYBkIgKxI5t+lojplTmLAeYjA4wHfPfJvh8OJnEjEjyvNtv0E3dB4pe2LB
      KVFKbYE6Tx0zDd2uIx0njhJcpgl5PDJzmtNyfGDR/f1kGOsPMN45eyolawoWh0r/yX4Gzo0S
      HA3hqSsgr8xBcDSEoilIsozFoc2yQVUllWcv/jShzn8ZA4OXu16geWLh/McpGwEMPU7rkXdS
      VZ3JHESDAfqbzi+rDovjqpmAHjfoOLOwceK1h5gSU24rC82vgxdlqJizMkJjQVRUWl5vp2hL
      DqO9AUJDITKKHUhOO+W3588qNhwepmty/l2p+YgZUV7qfJ5qT928CT1SJoDhjnYm+m/OGD43
      E6NdHSiaNm+I8cXILL46/Rnv9xOPLvz2P3zqRQK6Sk1BEecGxtmQo3JxwsbezTvmLWP3ZWI1
      HESuOXcQho7F4yQ0FsDqtjFweoBQXMWdrTHaNIK9fO7USf7YJGKJHvpt3osMBPspchbPeT1l
      Aug6dWzxm0yWTXBiHIcnY0khIh2eAhreGsM32kvJ+iys9sWjLORlFtHQ1oCr7k4coz6K8ipp
      9y78opNjKpXqes4bM82wZVWjeHseyDISAiFASBLS5c49x1w9w5qJLpa+5omLOJ2+1nkFkJI1
      QDQUpOd8clnDTZaOKzMbWU3y3SVJSLbNDHX6CPtjXDw6QHvD4nNqq8VOXl4tbruVbHcWsmIj
      O4F4/eX6XWjXJtKTJFS7hmpVUKwqqk1FsyqoVnXq3xznAPcWPkgkvrwDtfHI/C+LlAhgpLOd
      aHAJwV9NlkTQO87GBx5Nqkz17j24C9bN+GyhkIuXKSxYz6763ciKjfqy9aB6qC+da4I/k20F
      63i09Imk2ngt9Zmb2J2/h4QcoRdgIdfOlAig9/yZVFRjkiD+sVHyq2vZ+tjTi4YKlCSJujt2
      snXP7VTWKlx2xHK4rZTUZV1zt+AXL36bkbF2fvzKTxmf6GMyNEnfUAcDIz1MhkIMDHcQDPvp
      7DvLha4WuvrbON34BmPBmTs/VrvKI2VPcmf+PUv6jqWucj5b92WcmgunungmzYXIss8fn2jZ
      awAhBIMti+eXNUkhQjDYdpHau+8np6KKxjdfY6CliXjk6lRBVRUKnQHqsrx4fL9D+sOvKZBl
      HvBk4XdvJ+uBj9Pfa9BxZqbPbVGGm7dOHyM3zcGrh5/HnZaGbkzF39HEJFp6CWPH/0RuySbC
      vmaGRttxZW1g2tECSOD02JAlmU/WfB6n5uKNnldmmV/MR33GJj67/sukW9wIIahy1zCSxBbo
      dCyyhYq0ynmvL1sAk8ODBFZhzP5bnf6mRur2TGVTvPOTnyMaDDA5Mkw0FESTDVxNz2IbaZoa
      /C/1O0nXSZMGSPO9BK+dIHfnv5tVb2HJTtTxYTJc6UQ82Tic6eiGBYSBIcJ4J4apKN9MRmYR
      Q3E/klKFIy0byzTvL1eGDbtLQxgGUjDIU/Y91Ofk8OLIa3QYA+hzOOdISOQaadzb6WTbsSji
      j/+NyewcLDtuZ/e6Ozk69F7CAppOXcYGshdIzL3suEBDF85x5Lc/X2oVJktEs9n5wF/+9Wzn
      ckOHt/8WOg4uXonNzVv+LzPmTT6ezkLU7SqgpjhG6JV/Jd58AREMTNku2eyMF7ho3V7EeFkW
      IT2EJmvk2PNYN6qQ+YsXwTc7dIuyfgO/vlvmuD+5jRa7YuebW/8jZWnzr1mWPQKMdCV/QGGy
      fGKRMN7BATwF10Sb7jiYWOcHCHup4hWO8BQJZcdLAEWBgsHj+J59Ea716Q0FyWgLclvHCNZ7
      H8Dxgc8iWa3oY6P4/u4/I+axItAbz/GYUsPIrnI6Ax0JtUOVND5c9UlKXeUL3resRbAQgrHu
      xBpkkmKEYPTa370w4PhPk6qmSG2gsihVXnuC+vBRxGu/n935p2MYRN58Df8//T0iGiH03K/m
      7fyXsZ27yF/Ij/D0uj/Doc4fjVBCosZZxf++5f/izvw9i1qELmsEMOIxJhMMXGSSeiauzZ4T
      GIVAcotFCcGGGh8TlDHam5zf8LWsyw6SdeR4wqbascazRI8eJnYxgfg/QqC2d/Hw9o+xPXsn
      hwffpXH8DOORcQyhY5MsFA5G2dSmUzPuRbP+iGB1Hba9DyFn584rhGUJIDTpW/KRvMnymRVk
      LBpYkp+AKoLsfrqGQy9cZKR7acaMVTvyqGh/hVgyWT2EILz/DUQkMT8EEYkgSRK5jnyeqPgg
      j5d/gIgewYhHif36WfR337n0/f3ogN7dRfT4EVxf+jpaZfWc5wnLmgKtxoyNa4mQd2JmJh2r
      c2mHRtZ0LHaVuz5cS9WOPGQl8TosdpXb3r+OTXcVoC9hPagP9CGnpy9+I6Dk5SOiEYxgcGqH
      SZKwKlbkQ0endf6ZCO8EgZ98H2Oeg9pljQDxJGK2mKSeSMCPEAbS5feYIxtcuTC5eGLsGeTU
      wlgbSvcRNsk9lFfBxYFi+gOlRONzdBEJXB4bJeuzWLc1F6tDQ4TDU7s9SX+JCJbN2wi/vkj0
      CEUh3t5K+O19iEgEJb8Q+6NPoFbVEHl7YQ85Y3iIWMNJrLvvnnVtxTPEmCydSDCAYRhccXqS
      JKh9dCqbfKJ4SqDzXWh+BeJhJCAd2KFCLK8AX/Vn8Gm1RMNxJFnC5tRIz7aTlmVHmbb3jywj
      WSzJ22yqKtb7HiDe3kq89eKCt0anRRmJeyeY7GzD+bFPYyQQbzbe1TGnAFZNkumB3/oAABSD
      SURBVDyT5BGGgX7tKFz3GGSum7vAtUgKKBY4/zzMYXCmhfvJuvAPVOSPUHtHITU7Cyitz8ad
      ZYOhAaInjxM9dRx9cAAUGaVwbovLhZAzs5Ezs3F97Ztoc4U1sdrQNm6ZO9NlOEz4Ty8m9Jzr
      sghe3chkla/DCPsYH5i5M6LZbMTC4Sv3pWVnEvBHyC8vIewdZax/8Mq9aTl5TA4PslqJx2JY
      p3+g2WHvf4LX/wtMLOA7rFihai80LxLAIBaAYz+CR/4aIWvEW5oJ/eE3xNvbuJLGUlVRq2pR
      S8uJSVJSC3HrHbtBlpFdabi+9HX03m7iF84jQiHk7By0DZsJv/EKsXliy+recWSPBzG48LRP
      XVc19+cJt/Qmw55XjhIdIxSBrIpaNCmK5s4j7vfhKcgjFPAxOTaJVZPRbBbCPeNoRLAWlCLZ
      PGiSjtXtweJIR5UNxgdX53avmCurZlo+PPo30PBruPgaRKdtb8oq5G+C7Z+CltchEfOCkYuI
      8U5ineP4f/rDqQC004nHiV84R7yjFcnhRCSYoV7Oy8d6z94rb2dJklCLS1GLZwYFlhaI9ylp
      Fmx7Hyb4q5/Nmw9ZKS6dGkXm4JYVgB6NoGW5cFotZJaVEw+MocdiyK40gr4gECUtJx+HXSUw
      PjWHVDQLPY3nKNp8GzZVJhgYQ3G4sdpSn57zeiGEIDTpZaCpEe9QJjH2okZ7cdpl8uo2467d
      hZReMHVodvSfE6vUiGNcPE7gtwdmd/7phMMIiwUp3Y1YxHdZcntwfvoLV1KzLoS2cQuhl16A
      6OztUq1+E9Y992GMjxJ+7U9cm1xZzs2fCppltc4qC7ewAKLjvYzLeYjICN7hETRFJ3YppqVq
      saJHwyg2J5IeJRaLEY/G6fb3E4vGGWptQkSCxHUdmluXa45+XZnuGOMfG+X0y8/T13jumuRz
      l2jcT05FDxv2PkzeuiqSMX+IHnlv0dPaqRujWG6/ExEOET15DK4doSQJtWY9jo9+EnWBNYMe
      jyFdSo6tFJfgeOpDBP/wG5h27qSUr8Px9IeRFAX7Ux9GW7+RyKGDGAP9U2uHunqsd92DfCkB
      4VzcsgIACI5enrsHmb5UjF7errtmb/jyrzYwsnrn/NeiaBpCCLrPnOLIc7+YvSiegWC4vZW3
      f/xP1O3Zy8aMcuTBs4s+Q0gqsaHEHZ703m743P9Ku7oBrbORwowoNruCnJ2LtmEjamUNkqIQ
      CQUZ7+1htLsD72A//pFhQpM+YqEQhjCQAElRsLnScKS7sVdW4Rofw+NKJ2vnbux33Il0yclf
      kmW0unrU2vVTa5Bp06qFuKUFcKujqBqqZqGr4QSHf/PzudcDcyAMg8a3X0evK2KrrCEtEref
      jCr0SAhI7MRW93o581oHI6MOcO0gXJnJzsembPKjoSCtxw7RfeYkY709M3wYZrUTQNcJjI0S
      GLua8ZKJUeyH9lMwNkzJ5u1kl1egalPul5IkJXUYaArgJkaz2/GPjnD8D79JuPNPp/lCD9l1
      lZTQxHw5erG54fY/Rzr6I8RkgrZCVhvRabGGwoEYvuEhWt47QOepY8TCoaTbOgMhCPm8tB07
      RNuxQ7iycqi58x7Ktu3EkmR+gGWdA6iWuRcWJjcGW1o6Z17712V0KIlTvXZiGz8KljncDjMr
      4cFvQf561PIEzxYAS3UNtXeWYHNpqBad4PBhXv37v6Hl0IHld/458I8Oc+KPz/Hyt/+ai+8d
      QE8ict6yRgBX5rU+pSY3FMOg78K5aR+oFGyoIzoxymjvfNG5JTSrRiwytVYITk7Sq9RS/tTD
      0HscvD2gWjFy1xPNrsZQNTQRx3rPXqInj0N8kemSxYJ1z30UFWUQGDnP2ddfJhS9MQETwpM+
      TrzwW9qOvsvOD36czOLFc6wtyyNs0ufl1f/+V7PC7ZncGBRVQ5/RIZ1seN8uot4AgUAUPThB
      JBxBtjixagLNlUksHCM9XdB0+OSVUkX1m7j7U19AIIjqUU4MH+HI4LsMBQeIizguzUV1ei23
      n5jE8/ax+Q+6ZBn7Ux9G7LqL4y/8dkqcK5QeS1E11t//EOvvfRB5gbwByxoBJFkhPSfPTH+6
      QhjG7Hl/YGQAIbuwqhKTqhO3x4rkysXhUPCPDKM5sggHZ44O3sF+hBCMhkd45sL3aPE2z4jE
      5o1O0Bvo4UihlSfuLGTLqXEIzHyrS+np2B97mlBlNe98/+9XPDWWHo9x9rWXmOjr4faPfBJt
      nsO05QlAkvAUFJkCWCHsaekEvRPTPgnhGwkSnewhFtWxZJWg+zuJymMQDxOPxkDqQLXM/LPH
      IxHGAyN8t/Hb9AbmjxQdFBF+XdqHsf393DWRh97bgwQoJWVoGzYxMjrCwR9997rM85dKz7kG
      Qj4vez7zJazO2eucZTvFD5xr4Njvn11WI02SR9EsFNSunzP/sruoApvDirenjXBoaq6vuTKQ
      45NEwrMXiLb0dHxPlfLOUGKh7e2Kg/+w/S8pnBZucLClmQM//QF6krl9bxSegiLu+/O/wOqc
      6U65bGvQzJLSZUfuMkmezJJS0nPy5rzmycslMBknu6KCsm07yKuqo7BuI8V1NShz/MWjNsGJ
      scRju4b0IPv73rgSOXq0q4N3f/HjVdv5ASb6e3nn5z+aNTotWwDu3HzsCdhzmKSW3Ioqciur
      57wmyQqy7mPCa5CWU0BGXg7BiVHSc3LnXJOGchRC8eR2aponGtFFnKB3gnd/+ROiodUfGnO4
      vYVjf/jNjJDvyz4IkxWFvKoaOk4cXW5VJokiSRTU1pNRWIwzM2vmKSnQ39hAJOBHUr30GEGi
      QT+xSBRffxeKKmNMy/MrKwq2mmIItiXVBH9skkgszNHf/vymco3tOn2cnPJ1VO2aco5JiUNM
      Yd3GVFRjkiBOTwYZhcXIisKGBx6ZdT1yyRxZxCNM9PcS9HqJhUNEAv4rBoGXKd28neyCxffL
      r0WVVFreO8BgS/PSvsQKcvrl5/ENT/mIpEQAuZXVaLbURhczmZ+86rore9tlW2+jZNPWJdXj
      8GSy5f1PUeQquepXnCDOiEbL228t6bkrTTwa5cQLv8Uw9NQIwOpwkl9dm4qqTBKgfNtV10FZ
      lrntgx8jryq5378jI5N7P/cVbK40ytIqyHcUJFXe3RIjHr55D0AHW5roazyXOp/gitt2p6oq
      kwVIy8mbdcRvsdnZ85kvUXfP3oQSZ7jzCqjbs5fR7g56z58h7gvw/rKnkefJo3UtOTE3mZ0r
      c8KbSs7te3n55wDOS/uqeizGn/7u/5kdrMkkpWx++AnW3/fgnNeEEATGRmk9+h79TecJToyj
      x6LIqorNmYYejxEJBKZOkKf92SVZJqO4hM7qCCe0CxgLZIrPteez/Xw2keZbIx9cygQAcGH/
      Pk6//EJKGmYyG9Vi5bF//5fY0tIWvVcIQSwcQo/FEEJwbt+faDt2aGHbHFlicr2TjsoQo5GR
      GeYQFtnCluwdPJz1MO/943eWlat4NZFSf4CKHXdw/s3XVtVR+K1E2bbbrnT+WelLrzmMlCQJ
      i92BsAmOP/8b2o6+t/gDDEHaOT+Pu3fj3F1Hb6CbqBEhw5pJpbuGfEchF97ed8t0fkixAKxO
      F5V33MmFt/elsloTpvbra+++n6AvQte5EYY6fQS8U4tQR7qFnJJ0Sjdm43RbZ4ih93wDrUfe
      TepZXe8d5p7129hUNTPHlxCCnjOnlv9lVhEp9wirvft+Wg+/a44CKaZs2+30tcVoeu8M8Wv2
      8kOTUUZ7/TQf66dmZwG1dxSiqDJCCM6/8WrSJslCGDS++Rp5lTUzxBTyTjDe15OS77NaSHlk
      OJsrjZq77k11tWsa1WIjqldzbn/PrM4/HSMuuPBeH8dfbkOPG/hHhhnv713SM0e62gnNsDSF
      ofbWJdW1mrkuoRFr99yP0/QWSxmKo4ahrsR9fnuaxmg63DfV+Ze4x2HE43iHZkZbm5WQ4xbg
      ughAs9rY8uiTppVoCpAVFdlatviN19B8pJ/xgeXZ6MRCV6exQggmljiarGauW3Dc4vrNFG/Y
      fL2qXzPk196BridvbWvogoG2JYQrn4Zmu+pFZeg6wYmJBe6+ObluApBkmW2PfxCba/E9a5O5
      8RQUkVO9a8lutbHo0hNMy4pKeu5VfwM9Fr1iZHcrcV3DozvcHrY/9eHr+YhbFllV2fmhjxMN
      Ld3kQLF6SM/NX1LZzOISHJ7MKz/rsVhKHF48xRXklJZicaZxbYbXK8gaNocNSbVisVmufGzz
      ZJNbWYWqTiuoWrFOuydZrntgrJKNW6nadTcthxJM3WkCwNZHnyKzqISe5s5l1CJRf//DHPrV
      M0kWk6i//30ztkDnjDWaNDLpWW58fkFhRTqBiVHCEQPV5kJEA9g8mRixGKFgBJdTRXUXQWgQ
      3YDBixfJKCtjtLGZoo2biYbjhHxerBl5pGthOs83Eo0mHxzshiTI2PrY0+RUzJ+u3mQm5dtv
      v+Kw4XAvPfiYI91CyeatM6xHE6Fq193k16yf8VmqopvYPNkUlOYSFRZcuYW4M9LJr1mPp6gc
      m01Bc7lx5eSTW11HeHyI7Oo67Ok5OF0WJNVKdkkBw91DpOcVUVBTRSzgI6eiAj0+//bwQtyQ
      0IiKqrH7Y5/hje//A/7R1Rlnf7WQU17J9ic/dCUDfE5xOknmnLhaV2k6siyz4+k/QyDoPLmY
      36/Euk1b2bh+I/GWZpTcPKR0N5IkoSRgZbo4gr6zJwmH4qRnuBj1BVBEmEl/DOIh9HgU1ZmB
      Hg4Q6G/H7smi5d33cHo8BPxR4h3NhEdHEJqdid4OosEAQZ+PswcnsNgthALJm2en1BhuMSb6
      +3jrn//nLbmYSgXpeQXc9+dfm+FjLQzB/l81Jp3DV1YkHvrcJpwe26V6DLoaTnDujVfnzHjj
      9mRQEQyS4/XC5e1PVUXbsBnHhz6Gnp7OC//3f77l0uLeUAEAjPV08eYP/pH4HMkO1jIOt4f7
      v/gNXFnZs661nRrk1OvJrQXqdhey/s6iWUZyQgi8g/1M9PUQC4fR7HY87gykXzyD3j33MySn
      C8fXvskrv/kXQoskvrjZuOECABhsvcg7//LDaXm61jYOTwb3fu6rM7Ydp2MYgtP7Omk/nVgW
      +OK6THY8um5mFsf5EAL/Mz8k+t6BBW+TCwo5lpHB6LXZ6W9yViRLZF5lNfd89itYzTMC0nPz
      ufdzX5m38wPIssSWB8rYeG8JqmX+P5miytTtLmTHIwl2fsAYHyN67NDi9/X3Yb8FnZ1WZAS4
      zER/Lwd/9sMVjyO5UmQWlXD3p7+IfYEUPtcS9EXpOj/CUKeXoDeCEOBIt5JTmkbZhmwc15hD
      L0b0+BH83//HhO7tzcjg/C1m3bKiAgAI+by8+4sfM9LZvqx6bjZKNm3l9g9/Ysk5FhZziEmU
      yDv7Cfz0h4ndW1nN/vFbaxRY8UTZ9nQ3937+a1Tt3rPkP+LNhKJqbH74cXZ99NPLSjAiSdKM
      f0tFzslN+F53/UbceclFj1jtrIoUSarFwvYnPkRO2TpO/PG5W3ab1JWZPRXCZJ6QhiuBWr4O
      OSsHY7HzGUXFsvU2im02vIPzJd+4+VjxEeAykiRRumU77/vGf6Cgtn6lm5NSJFlm3c7dPPT1
      f7+qOj+AZLFg/8BHFjVdt+65F7WomLKtt105pLsVWPE1wFwIIehqOMHpl56/6fed3fmFbH3s
      6VnuhasJIQSRt14n+Nyv4FqDN0nCeuc9OD7+aSRtKmH4/p98j/6m8yvQ0tSzKgVwmWgoSNPB
      t2h+562bLg2T3e2hbs9e1u3cdVMkExRCYAwOEDn4FvG2FoSuoxQWYd11N2p17Yy3/lBbC2/9
      8/9EGEuzv1ktpGXnrG4BXHnO+BgX9u+j/fjhVX8Ub0tLp3r3PVTdcReWS0mcbzWEYbD/me8z
      0Ny40k1ZFjs/9PGbQwCXCfm8dJw4QvM7bxP2T96w5ybC5Vy15dtvn+FJdasy0d/L69/99qp/
      Ic1HZnEpD3zl395cAoCpoVoYBr3nG+g4eYyh1osrZldkdbooqF1P6ZYd5FfV3lKLw8UQQnDm
      1RdpfOv1lW5K0siqygNf/rdkFpfefAKYjhCCaDBAf1MjvecbGOlqJzx5HUcGScLh9pC7rpqi
      +k3kVdasibf9fMSjUd78wT/cdEkSNz74KPV7H546Q7mZBXAt8WgU39AAwx1tjPd2M97bTWB8
      DEOPzzo5XQxJllE0C2lZ2WQUlZBZXEpWaTlp2bkpso2/NfAND/L6d789I4LEaqagtp67P/WF
      K/kVbikBzEU8GiHonSA4MUHI553KkhIJo0ejiEtRkCVJRrPZUK02rE4XDrcHe7obhyfD7OwJ
      0N/cyMGf/jBFbpPXD3deAfd94evYXFeDBdzyAjC5/ggh6Dx5lCPPPYuYI3n3asCZmcW9n/8q
      aVk5Mz43X28my0aSJMq27UQAx373q1U3Ergys7nn81+Z1fnBHAFMUogQgsGLTbz37DOrJm1q
      dlkFd33y89jmSeVrCsAk5fiGBjj0q5+teCTpqt172PLIk6iW+eMGmQIwuS7EoxHOv/EqTe+8
      dcMTajgyMtnx5IcpqK1f1P7KFIDJdeNyQN0zr/4rA80Xruy6XS80m53KO+6ibs/9WJ2JhYU0
      BWBy3RFCMNzeQtOBN+lrOp+6KFuX0Gx21u3cRdWuPbiSDMtvCsDkhiGEwDc8SHfDSXrOnl6W
      Y42sKGSXraN0y3ZKNm3FYl+a4aEpAJMVQRgGk6MjjHS2MdzeyuTIEMGJCWKR0AzTd0lRUDUL
      FocTV2YWnoIisssqyF1XhWazL9vHwhSAyapACIERjxOPRTHicQxDR5JkZFlGVlVUi/WK+UIq
      MQ/CTFYFkiShaBrKJa+zG8Xasd81MZkDUwAmaxpTACZrGlMAJmsaUwAmaxpTACZrGlMAJmsa
      UwAmaxpTACZrGlMAJmsaUwAmaxpTACZrGlMAJmsaUwAmaxpTACZrGlMAJmsaUwAmaxpTACZr
      GlMAJmsaUwAma5r/H+nZ176iOixdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TrendLines' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DrillDownTaxiPassCount' width='192'>
      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
      /kcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DrillDownDailyCount' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAe20lEQVR4nO3d2ZMcR37Y8W9Vd1X1fU7PjZsESC54LUDukitKpPbi7koOO+zYBzlkRzhC
      EX5QSGG/Ouyg9Qfocf0kPToctkPWrqTVsUstCSwu4r6Puadneqbvrj6ru470A0iQsxiAM0Bj
      gGbn52WAnsrsX9X0ryszqypTEUIIJGlIqU87AEl6mvxPOwBpOHyxoaEoylOMZCOZANKOOP6L
      v2HihTdp1/JEgiGSIyM0ykWM+Ah0m0RHJggHtB2PS5F9AGknnDlzCsVxcLwOpaJJmyhvvbGX
      7GKOcqnK9P6XOPLqizselzwDSDtienoXmWSYxWwRPWhihFNk0il8SphMqkpkZPSpxNW3M8Bn
      1TxL7btngRBCHpNNPCvHpW+jQJ7n0e12+1UdQghc18XbQn56nsdnm3met2ldnicQwsNxHDxv
      8zrv1tPfFmGn0+lrfQ+yldg918Vx3AdsJzY9dk/KkzwuD/rsbLZ/vg8++OCDfr2p53n4/f1p
      VWVnrnJzPoeHj1a1gKf4WM0ugWaQX83Ssx3snoWr6nz8T39HOBaj2bY59qtfEtBUXKGyks2i
      B4PMXT3D1WwdUb7D6VurzM0uYagOWjDEwuwcoXCIhaUVTp/4CNWIkkrE+vbtZNs2mvbkO3en
      PvoFoZHd+Nw2y6sFPMdiPV9GUz3ml3PEEwn+/q/+DyvZOXp6knq1gq66rBYqYHeoNpr83V//
      lLFdewgHA0883id5XPKLtzh/Y547d+YIah7tTpdCxeSjX/4j4ViaXqtGs+tQXF19dvsAhUKR
      5175FhG3wonLedqFkyjBKM2zp7FtH6OpCPNrJv/u3/9bAK5dOk/d0dF6Dc6fPYPlKUTCMT45
      c4rxqT0QvFuv32/QXL/Gh2uLjI2kKOVzfPTrKN/90e/S81SuX73E/j3T+J7+2fmRnPj4GKFI
      gOMrJRKREHbXQTdUxqd3oygK4WiEj3/+M5KjGeKxEGtrRZKpBL/11hGCkThnThzn93//9572
      bjyWUrHAvoOvc/3MMU5fuExM1zn8xjfAp3P5wifomqDW7KH7Iv3rA7iui23bBAL9+fawrSY3
      bs0QT4/RrKwTiadxXQdXQLNaYmrPbv7xl6f5wz/4VyzOzuAKl66noQuLmmliBCNEwhE8BWrF
      AunpAyT8HWZXqySTCdqVPNFUhtzqCqMTU1QqNaKxKJqqcOC5A6h9OgO0221CoVBf6nqYlYU7
      lBs9ErEQpVqLRDSAECpmeZ2rt+f51z/+A3KzV2n3PDKjGVbXy4zEDfLlJuPpGJZQ0RQfCi7P
      Pf/8E4/3SR4Xt9fh2o2bRFPjuL0WiZBBttggHDTwK4JOu4Gt6kQC4f4mQK/XwzCMflT3pTpN
      k55iEA8/+dP14+h0OgSDwaf3/k2TUt1i1+TYU4thM0/7uHzmoQngdltcvnqTyV3TLK+WeOP1
      wxRyS5hd0Nw2/kgaM7/M5IHDxIJ+Wq0Wuq7vZPzPPMuy+nZW/Cp5Vo7LQ/sAPiPErkyIs59c
      ZXwyhenAyloJ8AAFp5jHb0RZXFjg0IHdGIbxTOzUs0QI8Ux80z1rnpXj8tBh0G6jxK/OzfDc
      3jQr+Rp2u4GmuLRtgW01UI041WKOSDwlP/jSQNpWH6DRaBCNRjf9Xb87wV8VO9UJHjTPynHZ
      1oWwB334JWlQyecBpKEmE0Aaas/sleC+6TaBbV7q0IKgfvUPjTQMCfDnL0HX3F6ZP/xrOPDe
      k4lHeqbIJpA01GQCSEPtoU0g4bncvDNLKmJQs+CFA3uYvX0dIz5KZXWByb0HmJ9f5sjR1xnQ
      myelIffQBHC6FqvrBTqRzy5Y7MJsdrHLV9H0BOd/fYzR3XtYq3VJ6k7fngUAuJSt8bNLq9sq
      MxoN8B/fPdC3GD6zYC6wYC5sq0w6kObV0Vf7HovUXw/9xGrBMIlIEMMnqHXBbDSxO3X0aJrK
      Wpbx3XvJrhV4/rBO0Kdh23bfApvJN/jLE4vbKnNwLPpEEuAfFv6Bn1z+ybbKvDP1Dj/5zvbK
      SDvvS7+y3zh69N6/m80m33zn09GR1167++PT31mW1ffgJOlJ21YnOBKJPPB3O/HYnyT1W99G
      gfrZ/JGkndK3BJBnAGkQ9XVaFEkaNH1LADnDojSI+pYAPp+vX1VJ0o7p25WrL3aCs3/8x/QW
      FrdVPvOnf0rse9/tVziStCV9SwBN+/xCmL2cpTc3t63yXr3er1Akacu2lAA3rl5Ej47w3J5p
      zp85gRFLU1lbIjOxh6WVNd557z0C8rY6aQBt6WOroJDL5QAX/EGalVXC8QyLt28wOhKnXO/u
      2CSwktRPW0qAeDxOJBKhUKwQ0hVGd72AsNu8/OY3abVtxhPGMzHHiyRt15aaQJO79zG5G2zH
      ZnT07kIG+/dMAzA9NQWA6z6hCCXpCdpWy13zy6u90leLvBdIGmryXiBpqMnBS2moyQSQhppM
      AGmoyU6wNNRkJ1gaarIJJA01mQDSUJMJIA21LSVAt9Oi0WwD0G416NkuddPE9TxMU97HLw2u
      Ld0MV280uH5zhnd/+1tcvngRVfPTadTx+wO0ei5H33mXhFwdVRpAWzoDCNsiMzkNCDQ9gHC7
      hMJxrGaDWCyC1XXk8wDSQNrSGaDd6eJXDHJreSYnMgRiL1HNr/C1114ju7zKRNxAeH55LUAa
      OFtKgL3PHbrvtVT8BQBeOPQcAPJxAGkQyVEgaajJBJCGmkwAaajJBJCGmkwAaajJBJCGmkwA
      aaht7Uqwa5NbKwCClcU5StU6Mzev02i1uHb9Np6cGV0aUFu6EGZWityeW2FyPM16sYKTW8an
      Bln85w+JjY6zXu+R1F0URa4WLA2WLZ0BEulRgrpKx+rS67RQ/EEaZplwPEmpUiOg+eT6ANJA
      2tr06IqPI6+/SqPR4Mib38CnGdhdCyMYxOp0CIV8WJa8D0gaPFtMAAVN00ilUp8XDN1dPT70
      6c8vrg8gSYOib6NArpwdVxpAfVshRnaAB4hjQXl+++VGXwDlqzVy3rcEUFVVngUGRXke/sdb
      2y/3X/KgBfofz1MkJ8aShtoTWSRPGg7ZRpa23d5WmZHgCOlg+glFtH1PZJlUaTj82ak/4/Ta
      6W2V+ZPX/4Q/euWPnlBE2yenRpSG2rYT4MrFc+TW83xy4mOWs1k+PnaSritvBpIG0/aaQMKj
      Ua/jqYv49AjXz37C2N69FMwu6YCHqn61hsieRf/tp9f4fxdXt1Xmx0d38V9/76UnFNFg22Yf
      QGF0dJSW7dFurnPga4dZzK5x6GUdDVcOg+4Ay3ZpWM62y0ib214CKArPv3j40/+8AsDBQ3en
      THFdIRNAGjiyzSINNTkMukO8TofV//Sft11u/L9/gDY29gQikkBeCNsxwnFpfvTRtst57e1d
      aJK2RzaBpKEmE0AaahsSQAiPGzduUq1Wn1Y8krSjNiaAVeXUuSvcnlvcdkWy/S8Nos8TQAhm
      5lc4tG+CWCL1kCKbk/cCSYNowxng+ef20uo4tFrNpxWPJO2ozxNAUVAUPz2rSbWYZ61Ye4ph
      SdLO2HAdQLgWRjhNKKwzkUk8rZgkacdsaAIpgQTNSpZUauRpxSNJO2rjGcCqUe0o1OubN3+E
      8Ji5eY1irUmrWiSdmWRlvch733+fcN+uKUvSzvn8YysEs/MrvPXNNzh0YO+mGyuKSjCgk87E
      CegGpZVldu3ejdnqoeoOfr/MAmmwbGgCNbouTbNMt9fbdGPhueRLVcLhNLrqcfR33sX1fEwm
      DYLB4I4ELEn9tOErOxkN0e46FMpV9k5P3Lexovo4+ubd+WR2TY4DkD6aBOQyqdLT0+o6/MWv
      F7Zd7j98a9/GBKjkVyi0Vab98ttcGhytrsOf/+LOtsv9+Oj0F68DwNe/8S1SkQDJRLyf8UnS
      M+sLfQAFnDb1jsfy0uJTC0iSdtKGJpDiD/HNt94kGpT39Ug7o3XyJO0LF7dVxnjuALH33+/L
      +28ctxQul86dZ3x6Dwf37+rLG0jSwzRPnKDyF3+5rTLR97/ftwT4jecBXFZLJk631ZfKJelZ
      t/FWCC1IwKnj+r5aU2BL0oNseB7AbtWIje6lXik+sECjss56uc61i+eo1GqcO38ZV8ipEaXB
      tOEMkM3lqRWW6IkHr/hormdZXl+h6yic/ehXKIpDrtql0+k88WAlqd82PA+wb88UeiTN1Fjm
      gQVGMhl8vgClfJb0xBTZlTyxsC5vhZAG0sZRIMfG/pKZngOZvRzJAC/sB+Dop69blvUEwpOk
      J2tjJ1iPkEkEqZnmtiuSzwRLg2jD7dACCAQCj7Tio5wVQhpEG84AMzOzFFYXqW9z+m2QZwBp
      MG1IgJXFGWx/jD0T238kUsihUGkAfd4EUhS+/aN/88gVybUBpEHUt7lB5eOQ0iCSC2VLQ00u
      kyoNtUdKAOHanDh+jFx2gV/88mM6juwAS4PpkRLA82wc2+bOzRuk01GKpiXvBZIG0iP1XBXF
      RzIZxwhOspav8LVEAD+e7AdIA+eREkD1G7zy+t27gA69cPc1OQoqDSK5RJI01OQwqDTU5DCo
      NNRkE0gaajIBpKEmE0AaarITLA012QmWhppsAklDTSaANNRkAkhD7dFuhxaCdquF63nyLlBp
      oD3SzXDC7bI8f4u1fIV2T/D2e98hpvc7NEl68h7tdmifhtW1mRhNULcELctGc235XLA0cB6p
      CeR22zjopCb2EgzHmEzIZVKlwfRIX9n+QJSjR78OwGjm7kS68nEAaRDJUSBpqMkEkIaaTABp
      qMkEkIaaTABpqMkEkIaaTABpqD1yAtRKBaxel9t35vDkzIjSgHq0BBAeF0+fZHH+FuVykXzD
      xnG2v6qMJD1tj5YAisrkxASaptNotvH7FLlCjDSQHvnutX2HX8Wn6aTTkyTCfmxbyFVipIHz
      yAmgGwEAEok4INcIkwZT30aBHmVpVUl62vqWAPIMIA2iviWAz+frV1WStGPkxFjSUJMTY0lD
      TZ4BpKEmzwDSUHusBOg2ipw+d5mevP4lDajHmsfELBVotjtYPRtdkVkgDZ7HOgOEEqOEfTY9
      x5MXwqSB9FhngEgyw1vf+nRaFNeVHWFp4MgHYqShJodBpaEmh0GloSabQNJQkwkgDTWZANJQ
      k51gaajJTrA01GQTSBpqMgGkoSYTQBpqMgGkofZYCdCqFTn+0YcUG71+xSNJO+qxEiAYTaDr
      QUK6KhfMlgbSYyVANb8CRhgF5DKp0kB6rOcB0pP7SE/e/becF1QaRLITLA01mQDSUJMJIA01
      mQDSUJMJIA21x04Az7XpWPJCmDSYHjsB5q+f5dZisR+xSNKOe+wEmN61S7ajpIH1WBfCALTI
      CPs0OSucNJgU0Ye1jRzHwbIsHMdB13Xa587htVr3bee6Hj7f5ucL4+AhtIlxbNtG0zTWzA63
      1hqbbut6Lj71/hVpwoafN/elcBwHVVVRVRXm/hnc+9cwflAdAEwfgVD6XixL9SWW6kubbup5
      3t33+Q2pQIrDI4exLItAIIBwHFonTmy+Pw85LqE33kANhe7Fcmutzppp3R+H8AAFdZMpKicT
      QQ6NR+/VQbcBS6c2j+Vhx+W5b4Pqu1fP1eJVqt3q/bG4HuoD9mdvbC+7Y7vvHZfu/Dx2Nnvf
      dkKAEJsfW38mQ+Cll+7F0XVcTs6Wt70/bx9I9ycB4POpEQOBwGPV89mBeRy9Xg+fz/fYyzb1
      I5Z2u00oFHqsOvoVSz/q6Fc9/Tgu/YjD98EHH3zwWDV8SgiB53n4/X68Xpv/+zf/AM1VslUF
      z26D16NUqlFvtcitZOl1OwifTrmwDn4DQ7vbGvP77/4src5z5to867NXuTSzzGgyStd2qZSK
      mNUaaAaVYh4jGGBtvQCeTbnWJBIJ4/f57n1z2GaOnx+7gKGpaLpBt9OiWKoi3B6VepvV5QXa
      rTZaMEQ+l8UfiKD51XuxNHI3masbpEOwvJpn9tYNQuEQ7Z6LoTn8z//1U4ToUavWEE6Pyuos
      FxcquOYKlj9JwC/uPS9dXbnJsatrzJz9JyLjB2g1m3QaVcx6g45lsbS4RLvTIRA0yK3mCEai
      +FRlw3G5eeEU+ZbHJ8d+QaHWI+ATCEWlUMhTrZoEQ0Hy6wUMTaFUa9JpVrEcCAWMe3UAzF49
      x+3VInhgaAqtdgez2aFtlun22szMrWL1LIKGj5VcgVgsem8CZL/fz/nzZxkdm6TbrlM2G1y7
      cgNDU1D1ILWlKxy/UaRVzVEzTXqdFpcvX8XTdOZuXmdkfBrPte8dl7/9q/9NaiTG3//qPOmo
      DopCqVimXK1SWc/R9qDT7mJ3GjQtm3AwsOGYuHabn/3tPxHVbX768w8Zm9pNo9HE7tSp1Ew6
      XQe326TnqdTKBVBU1tbzRKOxx+8DPCAd0L0uK1WF3tJl3F0TnFirsCcZxFF9dF2X9QI4zYtE
      UuOoFYs3X3l+Qw0zc0u0Gh20aJyoDqdOHCcSiyN8BqLnIm5cIpwe4/ipT9g7Pc6ZQp2xdISR
      0Qz6F86aQgg8IdANnXPHPqTt+XBdF9cfZCQaQHFM1tQIF0+cYvL5vVRFnJf3JL9YAUII1pcW
      OHHuBlPT45w5eRw9NsrvvP0qY4kA12ay7JuIU61UqKzMEp3Yz5WVMt/c9RrwheaK4qNlrqDa
      ChcvXyWhC7qujeIJNB9Y9Qr+2AgXPrnI6FQaXyzDVPLzu2yF57BaNHHKFsnMCG6zzK9PLxAz
      NAKJJJ4tuHzlGuMjKc5d7zAWMWh0e4QNg7fffmvjX8gTIMBn1/nw2C18oo3iD+L3KQTVDrls
      lbE9U1y8BrGgYGJyEsP/efPK8zxAMDc7w1yuTCauc/zYCaaff5F9MQ/VscjXXET5CsnpF7k+
      u4YQCl1NQVPhi43SzHiaXx27QCYdYn5hhXJujom9B6l3LIqrJUIjBZIBBVXV6To27/72Oxv2
      ZXV+Bl2D5VyNaDzGxfNnUYTApxnoioff8KOiYnfqaJEEpaUTxCYmcPQnlQCqxutHXqPTddF9
      OqVqla+//CJhv4JQodNz0DUdp9MkuzRPODa6sbxw2bX/EK9GNGZXKgSDKoykUPz63QW6PQFe
      j0q5wttvvcnaWoHXDk+ga+p9I1I+I8J4Kka35zF94CCjI0luz6+QSCYxfAqek0YxoljxKAtL
      8+yZPryhvB5J05xdxIgG2L93N+l0DEZHEKqBovg59MoRJswK0UiY9dUlfJERDuzfz2hmBMXp
      gO/zD00gkuRrB0BV96HpOmbLYjoSuLfPvU6GQDTOSKzM3MIcB762sQlnd9u8fPRthGXStF1E
      t0vaamOEIgRCQRAKtm1TqtQ48uIElbrFRDTIZkMUycwYrZKJLzrKwf0K0aBOsdElFg6guBax
      WIfkaIpY2eTO3Nx9dUxk0ty6dRs9GGH3dIhI0E8yliCaGSOo9TgylmF9aZbg2KsszC8xvf8A
      +/dl6Lhduu7GVvf03heIp5uEAgHqtSKZV48SjcbouS7paJJgPIrhE5TzOeqd+1vsajjND95/
      iTvXb5IaHUFR/LStHolYmE9PoDhWE/RpWrUSmddeJxAOEgwZIPrEcRzR6bTF0vysyOVLWyrj
      ubaYnZkRXdvd8Hq9WhJ3ZuZEz3EfUHILXFvMzdwRhXJti5tb4vadOeF63obXy4U1MTO3eN/r
      v8nzPLE8Pysa7e6G11utlnBtS9y5fVtU6q0txdLrNMXM/JLwfuM987msmF9aEV8SykN1O01x
      +/bt++J8kHa9KhaWc/fFsro0L5ZX1780Fs/tiTu3Z4Tjbtyw1WqJZr0qZueXhLul/fFELrso
      KubGY+h02+LO7dui1mhvpZL79LcT3G1z8fItPLfHrukxup6fXqtGLJbCtHokAgo9NBrlAonM
      BPXSOsFYkmarTTSkE0uNk0nFuHL2NKPTEyzm6uiqx0gqju0p9Jo1kqPjrK8ViEUD1Ns26ViA
      Ur1L3BBogQiVRoeXXzqE6picvJhF2CYToykULYBZrZMeSdKxBZrXwR8Ik8+tMT61i0JumfjI
      OM2ORdjnMjK1n0QkwOlTp9iXCbBsxVE9i9GYjucLYBYLjE1NkStUiAUULNdHWPNo2gp+t0Mk
      GqdmKeyfzqD2KlxfsbHMHCOJKIFIjGqtRSoRwlV07FaVYCTK2lqB6ekpVlZWGR3N0LY91F6T
      Xc+9SNjQOH3yFMmwDy+UwXEcwn4bvxGlUqsxkUlRMi38XhvFiKLYTVzVwO60iCXiuGqQ/bvG
      WZ+9RjM0Tn7hDrGQQTQ9SrNlEdEF/mCUWjFPNB4nX6oyPTnGcq7AVCZOV+h0akVeeOU1NFXh
      1MmTKAimpqdo9QRK1yQUTlFqtZlIBGl0FXqNEsHkKJZZQgtGaDYaxBMxAuEUiYhBy27SXctS
      FClwLVIhH4oWolouMT4+znrZJOR3cRQDQ7HpuD4Up000FqNla7xwYJp6fp5FU6NRXCYVCxOK
      JzHNNvGoDv4gHbNEOBpjLV9iemqS7GqO8cwIlgtu2+x/E6hayvPykTfJZ++QK5qkIgGqZoue
      I1hsVYhGYxhGiNKVs0Qz01w9+WuSmUmyio/3D9ztB3h2l1zFYjplcPLcZbq79+J5LordYWlp
      Gc+vsbKmMZoOM1szUUWLlXKTRCxAYOIFPhsJLK6t8o2332Th1gXKZotQIEir28PzoFZcJp2O
      owaSnP/nD9n10kE+PnWOqVQCLRbkwEEDAMdqUXYzJHwtztyYQT+4C8t2aZkNZheyxKIB8kaM
      hCFoCJV2u0y9ZhMPq4y+9Fv3jksuu8w333yZ6xdO0XJUDE2n040hHJtiMU88ZBBMZTh17DTT
      +yY4de4ymWQCI2xwSL/7Z2o3a6THX8Jtlrk5t8JzU2m6TpV222JpaYlwKIzfCBBQy6CEKa9d
      xtNTiMUVvvHedz6NxGN5cYlXD+7jk5MnEJU2ug8SIQ3HWmat3kOfW2B8zwSnL84wEvNx5WqW
      UGwEQ1f5rBtQr5Y4+PJRysUsi+sVxuMGxZJJu+eRy3YIBGKEDT/1+nUUbYSVCx8SHD/A7GKB
      f/Evv4fb6dDttGj6koR6dc7fmudr+yaxnDLtRov5hWWikSDCiBDVXECjYeZoWz5CmsK+I7/9
      6f4IVpeXeeO1g1w6e5JeroTu99PphPB6FvlKjYhfIT42xulTFxmfTHL24mWSiRRGUOv3MGiP
      btcmHo+Rz63g+QP0miaJVIqy2SIV0bBcH0FDw+11OHHsY/a+/A1CPkEqnSSRSKAADdMkFIvj
      dVssrxaIxUL0XBXPqpPITFBYXyedTqEosDx7i7lCi7dfPYgvEEHTA8QiQfBszGaPeCzManYZ
      PRTCrNTIjCQx2w5Bn42qh/H7ffQaFX710TGOvPtDsDukkzHi8TgKYNZMYvE4VrPGatEkEdFx
      1QCtWpHxqWlya0VGUgkUBDPXL1K2DQ7vmyAUS6AFI6ieTUBTafUgEtLJLi0RjkapVuukEmG6
      ngbdOkYkjs/no1nO8/HJs7z73e9h9xzi0SCJeBw+jSWeiFOvFKm0bAKqgxaKUS2XmRgfoVht
      kYiGUfC4cu40IjrG7kyceDJNOBpD96t02008f4CAH5aWlglHYzSaHaIBBcWI0a4WiCbT+Hwq
      pfUcJy7c4EffeQfL9REK+O+LpZzP0REaWHWiyREKpSoTI1FqbY9oUEfgcOb4x6T3vEgiqJEe
      GSGeTGC12/h1P7pfp2VWyFdaRIIqihamUS0yPjnBWqFKOhFDQXDryjmaSpSDuzJE4kmMUJSQ
      4cfptrE8P+GAj+WlZcLRKLVak2TMwFECOK0awVgCv0+lVsxz/MxFvvPdb9OzXaLhQL/7AJ0N
      r3XbdXH58iVRrDbu297zPFGr1u5rW97PEwuzt8StmXmx2ZadZkO0e/aXxteslcSlS5eE2bq/
      7et5nqhuIRbP88Sdm1fF7GL2Ae9REz3v/rbub6oUcuLS5Sui3XPufw/XETWzvum+btjO6Ykb
      166IpdX8pr+v12rC2UJnIb+6JC5fuyHsTRrintMVtXrrS2Nxex1x5fIlkStU7q/D80Stdv+x
      /c3j4nmuuH3jqphfXt30PRq1mrC3sD+l9RVx+co1Ydn39x891xY1s7Fhf57QMOhdN69e5/mv
      v0GnvMaJ4xfQdINEMsF6sYJPValVqvzgR+9vOkpx78ximRQaHi/tT3HjyiV6QEAL0muWKZkt
      XKvHnq+/xaHJ1ENjuXFrhtePHqGQXebS8hrBaIxoUMOslsEfoFSs8MMffu+hdTj1FUyR4GAi
      ypULZ1EMP341Qqu0TLWn0jabvPX+9xkN6Q+t5/bcEm8ceY3s4izZQpVILEbAD7VyAb+mUW7C
      +9/+1kPrKCzPYIzsJmG4nD9zEsXvIxJJUSis03OhZZq898MfENEefjFwfjnH668cZmHmFkWz
      TSwcxKdCaX2FgKZi+sb5zluHH1rH7StX2PXKUdRmiVPHj+FTFVJj4yytVdAUj4ZZ5fs/+uFD
      29ut4iJdPcN4zODSuTMouh9Dj2EWV2jYCm2zyW/94PukAg+fg3ZmIcuR119hZf4Oq+U60WgE
      3QfV4jqa5qfSC/L933nj3vb/H1IUZDh66/gdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AvgTipPerMileYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DrillDownTipDistributionYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AvgTipPerMileCategory' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
